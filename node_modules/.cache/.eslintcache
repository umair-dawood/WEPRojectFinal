[{"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\index.js":"1","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\reportWebVitals.js":"2","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Dashboard.js":"3","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\SideNav.js":"4","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Salesparent.js":"5","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Expenses.js":"6","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\salary.js":"7","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\StockTransfer.js":"8","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\AddItemModal.js":"9","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\itemDetails.js":"10","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\wareHouseParent.js":"11","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Settings.js":"12","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\actions\\store.js":"13","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Sales_preview.js":"14","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Sales.js":"15","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\preview.js":"16","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\sales_master.js":"17","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Add.js":"18","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\actions\\pos.js":"19","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\WareHouse.js":"20","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Login\\Login.js":"21","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\reducers\\index.js":"22","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\PrintInvoice.js":"23","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\actions\\api.js":"24","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\reducers\\pos.js":"25"},{"size":1847,"mtime":1653673194960,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1636720573000,"results":"28","hashOfConfig":"27"},{"size":13150,"mtime":1640875214000,"results":"29","hashOfConfig":"27"},{"size":3728,"mtime":1640785249000,"results":"30","hashOfConfig":"27"},{"size":525,"mtime":1640441120000,"results":"31","hashOfConfig":"27"},{"size":4064,"mtime":1639002386000,"results":"32","hashOfConfig":"27"},{"size":3010,"mtime":1639002246000,"results":"33","hashOfConfig":"27"},{"size":3998,"mtime":1640448608000,"results":"34","hashOfConfig":"27"},{"size":478,"mtime":1640447596000,"results":"35","hashOfConfig":"27"},{"size":5343,"mtime":1640717250000,"results":"36","hashOfConfig":"27"},{"size":421,"mtime":1640448629000,"results":"37","hashOfConfig":"27"},{"size":18640,"mtime":1640780576000,"results":"38","hashOfConfig":"27"},{"size":229,"mtime":1636912053000,"results":"39","hashOfConfig":"27"},{"size":1695,"mtime":1640717368000,"results":"40","hashOfConfig":"27"},{"size":5555,"mtime":1639976246000,"results":"41","hashOfConfig":"27"},{"size":1922,"mtime":1639975759000,"results":"42","hashOfConfig":"27"},{"size":7185,"mtime":1640801374000,"results":"43","hashOfConfig":"27"},{"size":8958,"mtime":1640716967000,"results":"44","hashOfConfig":"27"},{"size":1619,"mtime":1653673194941,"results":"45","hashOfConfig":"27"},{"size":3034,"mtime":1639959340000,"results":"46","hashOfConfig":"27"},{"size":3415,"mtime":1653673194940,"results":"47","hashOfConfig":"27"},{"size":118,"mtime":1636893787000,"results":"48","hashOfConfig":"27"},{"size":3303,"mtime":1653673194939,"results":"49","hashOfConfig":"27"},{"size":518,"mtime":1640801096000,"results":"50","hashOfConfig":"27"},{"size":1138,"mtime":1638967190000,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"jjzthg",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\index.js",["115"],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\reportWebVitals.js",[],["116","117"],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Dashboard.js",["118","119","120","121","122","123","124","125","126"],"import React from \"react\";\nimport {Outlet,useNavigate} from 'react-router-dom'\nimport * as d3 from 'd3'\n\nconst dataset = [\n  [ 34,     78 ],\n  [ 109,   280 ],\n  [ 310,   120 ],\n  [ 79,   411 ],\n  [ 420,   220 ],\n  [ 233,   145 ],\n  [ 333,   96 ],\n  [ 222,    333 ],\n  [ 78,    320 ],\n  [ 21,   123 ]\n];\n\nconst w = 500;\nconst h = 500;\nconst padding = 60;\n\nconst xScale = d3.scaleLinear()\n     .domain([0, d3.max(dataset, (d) => d[0])])\n     .range([padding, w - padding]);\n\nconst yScale = d3.scaleLinear()\n     .domain([0, d3.max(dataset, (d) => d[1])])\n     .range([h - padding, padding]);\n\nconst svg = d3.select(\"body\")\n  .append(\"svg\")\n  .attr(\"width\", w)\n  .attr(\"height\", h);\n\nsvg.selectAll(\"circle\")\n.data(dataset)\n.enter()\n.append(\"circle\")\n.attr(\"cx\", (d) => xScale(d[0]))\n.attr(\"cy\",(d) => yScale(d[1]))\n.attr(\"r\", (d) => 5);\n\nsvg.selectAll(\"text\")\n.data(dataset)\n.enter()\n.append(\"text\")\n.text((d) =>  (d[0] + \",\" + d[1]))\n.attr(\"x\", (d) => xScale(d[0] + 10))\n.attr(\"y\", (d) => yScale(d[1]))\n\nconst xAxis = d3.axisBottom(xScale);\n// Add your code below this line\nconst yAxis = undefined;\n// Add your code above this line\n\nsvg.append(\"g\")\n.attr(\"transform\", \"translate(0,\" + (h - padding) + \")\")\n.call(xAxis);\n\n// Add your code below this line\n\n\n\n// Add your code above this line\n\n\n\n\n\nfunction Dashboard(props) {\n\n  const navigate=useNavigate();\n\n  function handleClick(path){\n    navigate(path);\n  }\n\n\n\n\n  return (\n    <div className=\"content-wrapper\">\n    \n    \n      {/* Main content */}\n      <section className=\"content\" style={{paddingTop:'100px',justifyContent:'left'}}>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <g></g>\n        <div className=\"container-fluid\">\n          {/* Small boxes (Stat box) */}\n          <div className=\"row\">\n            <div className=\"col-lg-3 col-6\">\n              {/* small box */}\n              <div className=\"small-box bg-info\" >\n                <div className=\"inner\" style={{backgroundColor:'#4723D9'}}>\n                  <h3>150</h3>\n                  <p>Daily Sale</p>\n                </div >\n                <div className=\"icon\" >\n                  <i className=\"ion ion-bag\" />\n                </div>\n                <a href=\"#\" className=\"small-box-footer\" style={{backgroundColor:'#4723D9'}}>\n                   <i className=\"fas fa-arrow-circle-right\" />\n                </a>\n              </div>\n            </div>\n            {/* ./col */}\n            <div className=\"col-lg-3 col-6\">\n              {/* small box */}\n              <div className=\"small-box bg-success\">\n                <div className=\"inner\" style={{backgroundColor:'#4723D9'}}>\n                  <h3>\n                    53<sup style={{ fontSize: 20 }}>%</sup>\n                  </h3>\n                  <p>Profit</p>\n                </div>\n                <div className=\"icon\">\n                  <i className=\"ion ion-stats-bars\" />\n                </div>\n                <a onClick={()=>handleClick(\"SalesParent\")} className=\"small-box-footer\" style={{backgroundColor:'#4723D9'}}> \n                 <i className=\"fas fa-arrow-circle-right\" />\n                </a>\n              </div>\n            </div>\n            {/* ./col */}\n            <div className=\"col-lg-3 col-6\">\n              {/* small box */}\n              <div className=\"small-box bg-warning\">\n                <div className=\"inner\" style={{backgroundColor:'#4723D9',color:'white'}}>\n                  <h3>44</h3>\n                  <p>Monthly Sale</p>\n                </div>\n                <div className=\"icon\">\n                  <i className=\"ion ion-person-add\" />\n                </div>\n                <a onClick={()=>handleClick(\"SalesParent\")} className=\"small-box-footer\" style={{backgroundColor:'#4723D9',color:'white'}}>\n                   <i className=\"fas fa-arrow-circle-right\" />\n                </a>\n              </div>\n            </div>\n            {/* ./col */}\n            <div className=\"col-lg-3 col-6\">\n              {/* small box */}\n              <div className=\"small-box bg-danger\">\n                <div className=\"inner\" style={{backgroundColor:'#4723D9'}}>\n                  <h3>65</h3>\n                  <p>Vendor Payments</p>\n                </div>\n                <div className=\"icon\">\n                  <i className=\"ion ion-pie-graph\" />\n                </div>\n                <a onClick={()=>handleClick(\"VendorPayments\")} className=\"small-box-footer\" style={{backgroundColor:'#4723D9'}}>\n                   <i className=\"fas fa-arrow-circle-right\" />\n                </a>\n              </div>\n            </div>\n            {/* ./col */}\n          </div>\n          {/* /.row */}\n          {/* Main row */}\n          <div className=\"row\">\n            {/* Left col */}\n            <section className=\"col-lg-7 connectedSortable\">\n              {/* Custom tabs (Charts with tabs)*/}\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h3 className=\"card-title\">\n                    <i className=\"fas fa-chart-pie mr-1\" />\n                    Sales\n                  </h3>\n                  <div className=\"card-tools\">\n                    <ul className=\"nav nav-pills ml-auto\">\n                      <li className=\"nav-item\">\n                        <a\n                          className=\"nav-link active\"\n                          href=\"#revenue-chart\"\n                          data-toggle=\"tab\"\n                        >\n                          Area\n                        </a>\n                      </li>\n                      <li className=\"nav-item\">\n                        <a\n                          className=\"nav-link\"\n                          href=\"#sales-chart\"\n                          data-toggle=\"tab\"\n                        >\n                          Donut\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                {/* /.card-header */}\n                <div className=\"card-body\">\n                  <div className=\"tab-content p-0\">\n                    {/* Morris chart - Sales */}\n                    <div\n                      className=\"chart tab-pane active\"\n                      id=\"revenue-chart\"\n                      style={{ position: \"relative\", height: 300 }}\n                    >\n                      <canvas\n                        id=\"revenue-chart-canvas\"\n                        height={300}\n                        style={{ height: 300 }}\n                      />\n                    </div>\n                    <div\n                      className=\"chart tab-pane\"\n                      id=\"sales-chart\"\n                      style={{ position: \"relative\", height: 300 }}\n                    >\n                      <canvas\n                        id=\"sales-chart-canvas\"\n                        height={300}\n                        style={{ height: 300 }}\n                      />\n                    </div>\n                  </div>\n                </div>\n                {/* /.card-body */}\n              </div>\n            </section>\n            {/* /.Left col */}\n            {/* right col (We are only adding the ID to make the widgets sortable)*/}\n            <section className=\"col-lg-5 connectedSortable\">\n              {/* Map card */}\n              \n              {/* /.card */}\n              {/* solid sales graph */}\n              <div className=\"card bg-gradient-info\">\n                <div className=\"card-header border-0\">\n                  <h3 className=\"card-title\">\n                    <i className=\"fas fa-th mr-1\" />\n                    Sales Graph\n                  </h3>\n                  <div className=\"card-tools\">\n                    <button\n                      type=\"button\"\n                      className=\"btn bg-info btn-sm\"\n                      data-card-widget=\"collapse\"\n                    >\n                      <i className=\"fas fa-minus\" />\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn bg-info btn-sm\"\n                      data-card-widget=\"remove\"\n                    >\n                      <i className=\"fas fa-times\" />\n                    </button>\n                  </div>\n                </div>\n                <div className=\"card-body\">\n                  <canvas\n                    className=\"chart\"\n                    id=\"line-chart\"\n                    style={{\n                      minHeight: 250,\n                      height: 250,\n                      maxHeight: 250,\n                      maxWidth: \"100%\",\n                    }}\n                  />\n                </div>\n                {/* /.card-body */}\n                <div className=\"card-footer bg-transparent\">\n                  <div className=\"row\">\n                    <div className=\"col-4 text-center\">\n                      <input\n                        type=\"text\"\n                        className=\"knob\"\n                        data-readonly=\"true\"\n                        defaultValue={20}\n                        data-width={60}\n                        data-height={60}\n                        data-fgcolor=\"#39CCCC\"\n                      />\n                      <div className=\"text-white\">Mail-Orders</div>\n                    </div>\n                    {/* ./col */}\n                    <div className=\"col-4 text-center\">\n                      <input\n                        type=\"text\"\n                        className=\"knob\"\n                        data-readonly=\"true\"\n                        defaultValue={50}\n                        data-width={60}\n                        data-height={60}\n                        data-fgcolor=\"#39CCCC\"\n                      />\n                      <div className=\"text-white\">Online</div>\n                    </div>\n                    {/* ./col */}\n                    <div className=\"col-4 text-center\">\n                      <input\n                        type=\"text\"\n                        className=\"knob\"\n                        data-readonly=\"true\"\n                        defaultValue={30}\n                        data-width={60}\n                        data-height={60}\n                        data-fgcolor=\"#39CCCC\"\n                      />\n                      <div className=\"text-white\">In-Store</div>\n                    </div>\n                    {/* ./col */}\n                  </div>\n                  {/* /.row */}\n                </div>\n                {/* /.card-footer */}\n              </div>\n              {/* /.card */}\n              {/* Calendar */}\n              <div className=\"card bg-gradient-success\">\n                <div className=\"card-header border-0\">\n                  <h3 className=\"card-title\">\n                    <i className=\"far fa-calendar-alt\" />\n                    Calendar\n                  </h3>\n                  {/* tools card */}\n                  <div className=\"card-tools\">\n                    {/* button with a dropdown */}\n                    <div className=\"btn-group\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-success btn-sm dropdown-toggle\"\n                        data-toggle=\"dropdown\"\n                        data-offset={-52}\n                      >\n                        <i className=\"fas fa-bars\" />\n                      </button>\n                      <div className=\"dropdown-menu\" role=\"menu\">\n                        <a href=\"#\" className=\"dropdown-item\">\n                          Add new event\n                        </a>\n                        <a href=\"#\" className=\"dropdown-item\">\n                          Clear events\n                        </a>\n                        <div className=\"dropdown-divider\" />\n                        <a href=\"#\" className=\"dropdown-item\">\n                          View calendar\n                        </a>\n                      </div>\n                    </div>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-success btn-sm\"\n                      data-card-widget=\"collapse\"\n                    >\n                      <i className=\"fas fa-minus\" />\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-success btn-sm\"\n                      data-card-widget=\"remove\"\n                    >\n                      <i className=\"fas fa-times\" />\n                    </button>\n                  </div>\n                  {/* /. tools */}\n                </div>\n                {/* /.card-header */}\n                <div className=\"card-body pt-0\">\n                  {/*The calendar */}\n                  <div id=\"calendar\" style={{ width: \"100%\" }} />\n                </div>\n                {/* /.card-body */}\n              </div>\n              {/* /.card */}\n            </section>\n            {/* right col */}\n          </div>\n          {/* /.row (main row) */}\n        </div>\n        {/* /.container-fluid */}\n      </section>\n      {/* /.content */}\n    </div>\n  );\n}\nexport default Dashboard;\n",["127","128"],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\SideNav.js",["129","130","131","132","133","134"],"import './SideNav.css';\nimport React ,{useEffect,useState} from 'react'\nimport {Outlet,useNavigate} from 'react-router-dom'\nimport Login from '../Login/Login';\nimport { faCartPlus,faPowerOff,faWarehouse,faTv,faCogs } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst SideNav = () => {\n\n    var [date,setDate] = useState(new Date());\n    \n    useEffect(() => {\n        var timer = setInterval(()=>setDate(new Date()), 1000 )\n        return function cleanup() {\n            clearInterval(timer)\n        }\n    \n    });\n\n\n    const navigate=useNavigate();\n\n   function handleClick(path){\n     navigate(path);\n   }\n\n    function refreshforlogout(){\n        window.location.reload(false);\n    }\n  \n\n\n            const [token,setToken]=useState();\n            if(!token) {\n                return <Login setToken={setToken} />\n              }\n              \n    \n        let temp=localStorage.getItem(\"username\");\n      \n\n   return (\n\n     <div  >\n         <div className=\"topnav\">\n  <p className=\"active\" style={{fontWeight:'normal'}}>{temp}</p>\n  <p >{date.toLocaleTimeString()}</p>\n  <p >{date.toLocaleDateString()}</p>\n</div>\n   <div className=\"area\"></div><nav className=\"main-menu\">\n            <ul>\n                <li>\n                    <a className=\"nameofbrand\" onClick={() => handleClick(\"DashBoard\")}>\n                        <i className=\"fas\"></i>\n                        <span style={{color:'white',fontSize:'15px'}} className=\"nav-text\">\n                            Home Electronics\n                        </span>\n                    </a>\n                  \n                </li>\n                <li className=\"has-subnav\">\n                    <a onClick={() => handleClick(\"Salesparent\")}>\n                        <FontAwesomeIcon className=\"fas\" icon={faCartPlus}/>\n                        <span className=\"nav-text\">\n                            Point Of Sales\n                        </span>\n                    </a>\n                  \n                </li>\n                <li className=\"has-subnav\">\n                    <a  onClick={() => handleClick(\"Warehouse\")}>\n                    <FontAwesomeIcon className=\"fas\" icon={faWarehouse}/>\n                        <span className=\"nav-text\">\n                            Warehouse Management\n                        </span>\n                    </a>\n                    \n                </li>\n              \n             \n           \n\n            \n\n                <li className=\"has-subnav\">\n                    <a  onClick={() => handleClick(\"ItemDetails\")}>\n                    <FontAwesomeIcon className=\"fas\" icon={faTv}/>\n                        <span className=\"nav-text\">\n                            Item Management\n                        </span>\n                    </a>\n                   \n                </li>\n              \n              \n              \n                <li className=\"has-subnav\">\n                    <a  onClick={() => handleClick(\"Settings\")}>\n                    <FontAwesomeIcon className=\"fas\" icon={faCogs}/>\n                        <span className=\"nav-text\">\n                            Settings\n                        </span>\n                    </a>\n                   \n                </li>\n            </ul>\n\n            <ul className=\"logout\">\n                <li>\n                   <a onClick={refreshforlogout}>\n                   <FontAwesomeIcon className=\"fas\" icon={faPowerOff}/>\n                        <span className=\"nav-text\">\n                            Logout\n                        </span>\n                    </a>\n                </li>  \n            </ul>\n        </nav>\n        <Outlet />\n </div>\n       \n   )\n }\n export default SideNav;","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Salesparent.js",["135","136","137"],"import React from \"react\";\nimport Sales from \"./Sales\";\nimport SalesMaster from \"./sales_master\";\nimport './SalesParent.css'\nimport SalesPreview from \"./Sales_preview\";\nimport Preview from './preview'\nimport Add from \"./Add\";\n\nfunction Salesparent(props) {\n\n\n  \n\n    return (<div  className-=\"div\" style={{paddingLeft:\"8vw\"}}>\n    \n        <div className-=\"div\" id=\"parent\" className=\"rowC\"> <Add className=\"Sales\"/></div>\n             <div className-=\"div\" ><SalesMaster/></div>\n    </div>);\n\n}\n\n\nexport default Salesparent;","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Expenses.js",[],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\salary.js",[],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\StockTransfer.js",[],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\AddItemModal.js",[],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\itemDetails.js",["138","139","140","141"],"import React from 'react';\nimport {useEffect,useState} from \"react\";\nimport './forms.scss'\nimport {connect} from 'react-redux';\nimport * as actions from '../actions/pos';\nimport { faTimesCircle,faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {Table} from 'react-bootstrap'\n\n\n\nexport var reRender={reRender:\"\"}\n\n\nfunction ItemDetails(props){\n    const [currentId, setCurrentId] = useState(0)\n\n    const intialvalues={\n        ItemType:'AC',\n        ModelNumber:'',\n        ItemBrand:'Haier'\n     }\n     const [values,setValues] = useState(intialvalues);\n\n     \n     const handleSubmit =e=>{\n        const onSuccess = () => {\n            resetForm()\n            alert(\"Submitted successfully\")\n        }\n         actions.TableString.StringOfTable=\"itemDetails/\";\n       \n\n        console.log(\"Now Putting into lists\")\n        \n        e.preventDefault();\n        console.log(values);\n\n        if (currentId == 0){\n                props.createPos(values,()=>{window.alert('New Product Added to Inventory')})\n        }\n        else{\n                props.updatePos(values,currentId,onSuccess)\n        }\n     }\n     const handleInputChange=e=>{\n        const {name,value}=e.target\n        setValues({\n           ...values,\n           [name]: value\n        })\n     }\n   \n     const resetForm = () => {\n        setValues({\n            ...intialvalues\n        })\n        setCurrentId(0)\n    }\n    useEffect(() => {\n        actions.TableString.StringOfTable=\"itemDetails/\";\n        if (currentId != 0) {\n            setValues({\n                ...props.poslist.find(x => x.ModelNumber == currentId)\n            })\n            \n        }\n        console.log('Updating Sales_preview')\n        props.fetchAllPos();\n    }, [currentId]);\n\n\n    const onDelete = id => {\n        actions.TableString.StringOfTable=\"itemDetails/\";\n        if (window.confirm('Are you sure to delete this record?'))\n            props.deletePos(id,()=>alert(\"Deleted successfully\", { appearance: 'info' }))\n    }\n\n\n    return(\n        <div style={{padding:'1px'}}>\n             <section className=\"pos\">\n            <form className=\"contact-form row\" onSubmit={handleSubmit}>\n          \n          \n                \n            <div className=\"form-field col-lg-6\">\n    <label className=\"label\" for=\"Supplier\" style={{marginBottom:\"20px\"}}>Supplier</label>\n   <select name=\"ItemBrand\" id=\"comp\" onChange={handleInputChange} value={values.ItemBrand}>\n        <option value=\"Haier\">Hair</option>\n        <option value=\"Anex\">Anex</option>\n        <option value=\"Dawlance\">Dawlance</option>\n        <option value=\"Samsung\">Samsung</option>\n        <option value=\"LG\">LG</option>\n        <option value=\"Hyundai\">Hyundai</option>\n        <option value=\"TCL\">TCL</option>\n        <option value=\"Sony\">Sony</option>\n    </select>\n      </div>\n      <div className=\"form-field col-lg-6\">\n        <label className=\"label\" for=\"Type\" style={{marginBottom:\"20px\"}}>Type</label>\n        <select name=\"ItemType\" id=\"lang\" onChange={handleInputChange} value={values.ItemType}>\n            <option value=\"AC\">AC</option>\n            <option value=\"LED\">LED</option>\n            <option value=\"Refrigerator\">Refrigerator</option>\n            <option value=\"Heater\">Heater</option>\n            <option value=\"Washing\">Washing Machine</option>\n      </select>\n      </div>\n      <div className=\"form-field col-lg-6\">\n         <input name=\"ModelNumber\" onChange={handleInputChange} value={values.ModelNumber} id=\"SKU\" className=\"input-text js-input\" type=\"text\" required/>\n         <label className=\"label\" for=\"\">Product SKU</label>\n      </div>\n     \n      \n      \n      \n\n        <div className=\"form-field col-lg-12\">\n         <input  className=\"submit-btn\" type=\"submit\" value=\"Add Products\"/>\n      </div>\n\n            </form>\n            \n            \n            </section>\n        <div  className=\"table1\">\n            <Table striped bordered hover variant=\"dark\">\n                    <thead >\n                <tr>\n                    <th>#</th>\n                    <th>Type</th>\n                    <th>Brand</th>\n                    <th>Model Number</th>\n                    <th>Delete</th>\n                    <th>Update</th>\n                </tr>\n                </thead>\n            <tbody>\n        {props.poslist.map((record, index) => {\n            return (\n            <tr>\n                 <th scope=\"row\">{index}</th>\n                <td>{record.ItemType}</td> \n                <td>{record.ItemBrand}</td>\n                <td>{record.ModelNumber}</td>\n                <td><FontAwesomeIcon icon={faTimesCircle} style={{color:\"red\"}} id=\"closeButton\" className=\"fas\" onClick={() => onDelete(record.ModelNumber)}/></td>\n                <td><FontAwesomeIcon icon={faEdit} style={{color:\"blue\"}} className=\"fas fa-edit \" onClick={() => { setCurrentId(record.ModelNumber) }} /></td>\n            </tr>\n           );\n        })}\n        </tbody>\n       \n        </Table>\n        </div>\n        </div>\n    );\n}\n\n\nconst mapStateToProps = state=>({\n        poslist: state.pos.list  \n})\n\nconst mapActionToProps =  {\n    fetchAllPos: actions.fetchall,\n    deletePos: actions.Delete,\n    updatePos: actions.update,\n    createPos: actions.create\n}\n\nexport default connect(mapStateToProps,mapActionToProps)(ItemDetails);\n","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\wareHouseParent.js",["142"],"import WareHouse from \"./WareHouse\"\nimport StockTransfer from \"./StockTransfer\"\nimport Sales_preview from \"./Sales_preview\"\nimport './forms.scss'\n\nfunction WareHouseParent(){\n    return(<div>\n        <h1  style={{paddingLeft:\"10vw\"}}className=\"title\" >Warehouse Management</h1>\n        <WareHouse/>\n        <br/>\n        <StockTransfer/>\n        <br/>\n        <Sales_preview/>\n    </div>)\n}\nexport default WareHouseParent","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Settings.js",["143","144","145","146","147","148","149","150"],"import { useState } from \"react\";\nimport \"./forms.scss\";\nimport { faTimesCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Modal, Button, Table } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Settings = (props) => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [show1, setShow1] = useState(false);\n    const handleClose1 = () => setShow1(false);\n    const handleShow1 = () => setShow1(true);\n    \n    const [show2, setShow2] = useState(false);\n    const handleClose2 = () => setShow2(false);\n    const handleShow2 = () => setShow2(true);\n\n    \n    var settingsCacheWarehouse = [];\n    var settingsCacheBrand = [];\n    var settingsCacheCategory = [];\n    var settingsCacheBank = [];\n\n    var WareHousePreviewData = [];\n\n    var retrievedDataWareHouse = localStorage.getItem(\"WareHouse\");\n    if (retrievedDataWareHouse == null) {\n        WareHousePreviewData = [1, 2, 3];\n    } else {\n        WareHousePreviewData = JSON.parse(retrievedDataWareHouse);\n    }\n    var retrievedDataBrand = localStorage.getItem(\"Brand\");\n    var BrandPreviewData = JSON.parse(retrievedDataBrand);\n\n    var retrievedDataCategory = localStorage.getItem(\"Category\");\n    var CategoryPreviewData = JSON.parse(retrievedDataCategory);\n\n    var retrievedDataBank = localStorage.getItem(\"Bank\");\n    var BankPreviewData = JSON.parse(retrievedDataBank);\n\n    const onDelete = (event, i) => {\n        if (event.target.getAttribute(\"name\") == \"warehouse\") {\n            WareHousePreviewData.splice(i, 1);\n            localStorage.setItem(\"WareHouse\", JSON.stringify(WareHousePreviewData));\n        }\n        if (event.target.getAttribute(\"name\") == \"brand\") {\n            BrandPreviewData.splice(i, 1);\n            localStorage.setItem(\"Brand\", JSON.stringify(BrandPreviewData));\n        }\n        if (event.target.getAttribute(\"name\") == \"category\") {\n            CategoryPreviewData.splice(i, 1);\n            localStorage.setItem(\"Category\", JSON.stringify(CategoryPreviewData));\n        }\n        if (event.target.getAttribute(\"name\") == \"bank\") {\n            BankPreviewData.splice(i, 1);\n            localStorage.setItem(\"Bank\", JSON.stringify(BankPreviewData));\n        }\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        settingsCacheBrand.push(event.target.AddBrand.value);\n        settingsCacheCategory.push(event.target.AddCategory.value);\n        settingsCacheBank.push(event.target.AddBank.value);\n        settingsCacheWarehouse.push(event.target.AddWareHouse.value);\n\n        localStorage.setItem(\"Brand\", JSON.stringify(settingsCacheBrand));\n        localStorage.setItem(\"Category\", JSON.stringify(settingsCacheCategory));\n        localStorage.setItem(\"Bank\", JSON.stringify(settingsCacheBank));\n        localStorage.setItem(\"WareHouse\", JSON.stringify(settingsCacheWarehouse));\n    };\n\n    return (\n        <div style={{ padding: \"100px\" }}>\n            <h1 style={{ paddingBottom: '100px' }}>Settings</h1>\n            <hr/>\n\n            <div style={{ padding: '50px' }}>\n                <section>\n                    <h5>Business Locations</h5>\n                    <Button variant=\"primary\" onClick={handleShow} style={{ margin: '30px' }}>\n                        Add+\n                    </Button>\n\n                    <Modal size='xl' show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Add Business Location</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <section className=\"pos\">\n                                <form className=\"contact-form row\" onSubmit={handleSubmit}>\n                                    <div className=\"form-field col-lg-6\">\n                                        <input\n                                            name=\"AddBrand\"\n                                            id=\"posName\"\n                                            className=\"input-text js-input\"\n                                        ></input>\n                                        <label className=\"label\" for=\"\">\n                                            Name\n                                        </label>\n                                    </div>\n                                    <div className=\"form-field col-lg-6\">\n                                        <input\n                                            name=\"AddCategory\"\n                                            id=\"posName\"\n                                            className=\"input-text js-input\"\n                                        ></input>\n                                        <label className=\"label\" for=\"\">\n                                            Location ID\n                                        </label>\n                                    </div>\n                                    <div className=\"form-field col-lg-6\">\n                                        <input\n                                            name=\"AddWareHouse\"\n                                            id=\"posName\"\n                                            className=\"input-text js-input\"\n                                        ></input>\n                                        <label className=\"label\" for=\"\">\n                                            Contact\n                                        </label>\n                                    </div>\n                                    <div className=\"form-field col-lg-12\">\n                                        <textarea\n                                            name=\"AddBank\"\n                                            id=\"posName\"\n                                            className=\"input-text js-input\"\n                                        ></textarea>\n                                        <label className=\"label\" for=\"\">\n                                            Address\n                                        </label>\n                                    </div>\n                                    <div className=\"form-field col-lg-12\">\n                                        <input\n                                            className=\"submit-btn\"\n                                            type=\"submit\"\n                                            value=\"Save Settings\"\n                                        />\n                                    </div>\n                                </form>\n                            </section>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleClose}>\n                                Save Changes\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </section>\n\n                <section>\n                    <Table striped bordered hover variant=\"dark\">\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Name</th>\n                                <th>Location ID</th>\n                                <th>Address</th>\n                                <th>Contact</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>1</td>\n                                <td>Home Electornics</td>\n                                <td>Shop</td>\n                                <td>Gulistan e johar,Block-12</td>\n                                <td>031111111111</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </section>\n            </div>\n            <hr/>\n            <div  style={{padding:'50px'}}>\n                <section>\n                    <h5>Supplier</h5>\n                    <Button variant=\"primary\" onClick={handleShow1} style={{ margin: '30px' }}>\n                        Add+\n                    </Button>\n\n                    <Modal size='xl' show={show1} onHide={handleClose1}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Add Supplier Information</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <section className=\"pos\">\n                                <form className=\"contact-form row\" onSubmit={handleSubmit}>\n                                    <div className=\"form-field col-lg-6\">\n                                        <input\n                                            name=\"AddBrand\"\n                                            id=\"posName\"\n                                            className=\"input-text js-input\"\n                                        ></input>\n                                        <label className=\"label\" for=\"\">\n                                            Name\n                                        </label>\n                                    </div>\n                                    <div className=\"form-field col-lg-6\">\n                                        <input\n                                            name=\"AddCategory\"\n                                            id=\"posName\"\n                                            className=\"input-text js-input\"\n                                        ></input>\n                                        <label className=\"label\" for=\"\">\n                                            Account Info\n                                        </label>\n                                    </div>\n                                    <div className=\"form-field col-lg-6\">\n                                        <input\n                                            name=\"AddWareHouse\"\n                                            id=\"posName\"\n                                            className=\"input-text js-input\"\n                                        ></input>\n                                        <label className=\"label\" for=\"\">\n                                            Contact\n                                        </label>\n                                    </div>\n                                    <div className=\"form-field col-lg-12\">\n                                        <textarea\n                                            name=\"AddBank\"\n                                            id=\"posName\"\n                                            className=\"input-text js-input\"\n                                        ></textarea>\n                                        <label className=\"label\" for=\"\">\n                                            Address\n                                        </label>\n                                    </div>\n                                    <div className=\"form-field col-lg-12\">\n                                        <input\n                                            name=\"AddBank\"\n                                            id=\"posName\"\n                                            className=\"input-text js-input\"\n                                        ></input>\n                                        <label className=\"label\" for=\"\">\n                                            Email\n                                        </label>\n                                    </div>\n                                    <div className=\"form-field col-lg-12\">\n                                        <input\n                                            className=\"submit-btn\"\n                                            type=\"submit\"\n                                            value=\"Save Settings\"\n                                        />\n                                    </div>\n                                </form>\n                            </section>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleClose}>\n                                Save Changes\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </section>\n\n                <section>\n                    <Table striped bordered hover variant=\"dark\">\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Name</th>\n                                <th>Location ID</th>\n                                <th>Address</th>\n                                <th>Contact</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>1</td>\n                                <td>Home Electornics</td>\n                                <td>Shop</td>\n                                <td>Gulistan e johar,Block-12</td>\n                                <td>031111111111</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </section>\n            </div>\n            <hr/>\n            <div  style={{padding:'50px'}}>\n                <section>\n                    <h5>Categories</h5>\n                    <Button variant=\"primary\" onClick={handleShow2} style={{ margin: '30px' }}>\n                        Add+\n                    </Button>\n\n                    <Modal size='xl' show={show2} onHide={handleClose2}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Add Business Location</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <section className=\"pos\">\n                                <form className=\"contact-form row\" onSubmit={handleSubmit}>\n                                    <div className=\"form-field col-lg-6\">\n                                        <input\n                                            name=\"AddBrand\"\n                                            id=\"posName\"\n                                            className=\"input-text js-input\"\n                                        ></input>\n                                        <label className=\"label\" for=\"\">\n                                            Name\n                                        </label>\n                                    </div>\n                                    <div className=\"form-field col-lg-6\">\n                                        <input\n                                            name=\"AddCategory\"\n                                            id=\"posName\"\n                                            className=\"input-text js-input\"\n                                        ></input>\n                                        <label className=\"label\" for=\"\">\n                                            Location ID\n                                        </label>\n                                    </div>\n                                    <div className=\"form-field col-lg-6\">\n                                        <input\n                                            name=\"AddWareHouse\"\n                                            id=\"posName\"\n                                            className=\"input-text js-input\"\n                                        ></input>\n                                        <label className=\"label\" for=\"\">\n                                            Contact\n                                        </label>\n                                    </div>\n                                    <div className=\"form-field col-lg-12\">\n                                        <textarea\n                                            name=\"AddBank\"\n                                            id=\"posName\"\n                                            className=\"input-text js-input\"\n                                        ></textarea>\n                                        <label className=\"label\" for=\"\">\n                                            Address\n                                        </label>\n                                    </div>\n                                    <div className=\"form-field col-lg-12\">\n                                        <input\n                                            className=\"submit-btn\"\n                                            type=\"submit\"\n                                            value=\"Save Settings\"\n                                        />\n                                    </div>\n                                </form>\n                            </section>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleClose}>\n                                Save Changes\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </section>\n\n                <section>\n                    <Table striped bordered hover variant=\"dark\">\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Name</th>\n                                <th>Location ID</th>\n                                <th>Address</th>\n                                <th>Contact</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>1</td>\n                                <td>Home Electornics</td>\n                                <td>Shop</td>\n                                <td>Gulistan e johar,Block-12</td>\n                                <td>031111111111</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </section>\n            </div>\n        </div>\n    );\n};\n\nexport default Settings;\n","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\actions\\store.js",[],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Sales_preview.js",["151"],"import React from 'react';\nimport {useEffect} from \"react\";\nimport './forms.scss'\nimport {connect} from 'react-redux';\nimport * as actions from '../actions/pos';\nimport './Sales_preview.css'\nimport {Table} from 'react-bootstrap'\n\n\n\n\n\nexport var reRender={reRender:\"\"}\n\n\nfunction SalesPreview(props){\n\n\n    useEffect(() => {\n        actions.TableString.StringOfTable=\"StockDetails\";\n        console.log('Updating Sales_preview')\n        props.fetchAllPos();\n    }, []);\n\n\n    return(\n        <div  className=\"table1\" style={{\"background\":\"transparent\",\"paddingLeft\":\"30px\"}}>\n            <Table striped bordered hover variant=\"dark\" style={{margin:'30px'}}>\n                    <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Location</th>\n                    <th>SKU</th>\n                    <th>Quantity</th>\n                    <th>Purchase Price</th>\n                    <th>Date Stock Updated</th>\n                </tr>\n                </thead>\n            <tbody>\n        {props.poslist.map((record, index) => {\n            return (\n            <tr>\n                 <th scope=\"row\">{index}</th>\n                <td>{record.WareHouseID}</td>\n                <td>{record.Item_ModelNumber}</td> \n                <td>{record.Quantity}</td>\n                <td>{record.UnitPrice}</td>\n                <td>{record.StockAdd_Datetime}</td>\n            </tr>\n           );\n        })}\n        </tbody>\n       \n        </Table>\n        </div>\n    );\n}\n\n\nconst mapStateToProps = state=>({\n        poslist: state.pos.list  \n})\n\nconst mapActionToProps =  {\n    fetchAllPos: actions.fetchall\n}\n\nexport default connect(mapStateToProps,mapActionToProps)(SalesPreview);\n","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Sales.js",[],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\preview.js",["152","153","154","155"],"import React from 'react';\nimport {useEffect,useState} from \"react\";\nimport './forms.scss'\nimport {connect} from 'react-redux';\nimport * as actions from '../actions/pos';\nimport './Sales_preview.css'\n\n\n\nexport var reRender={reRender:\"\"}\n\n\nfunction Preview(props){\n\n   \n    const temp=localStorage.getItem(\"username\");\n    \n\n\n    useEffect(() => {\n        actions.TableString.StringOfTable=\"Bill_Child_Temp/\"+temp;\n        console.log('Updating Sales_preview')\n        props.fetchAllPos();\n    }, [reRender.reRender]);\n\n    const onDelete = id => {\n        actions.TableString.StringOfTable=\"Bill_Child_Temp/\";\n        if (window.confirm('Are you sure to delete this record?'))\n            props.deletePos(id,()=>alert(\"Deleted successfully\", { appearance: 'info' }))\n    }\n    \n\n    return(\n        <div className=\"table1\" style={{\"background\":\"transparent\"}}>\n            {console.log(props.poslist)}\n        {props.poslist.map((record, index) => {\n            return (<ul className=\"list-group\" key={index} style={{\"background\":\"transparent\"}}>\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\" style={{\"background\":\"transparent\"}}>\n              {record.ItemBrand}{\" \"}\n                {record.ItemType}{\" \"}\n                {record.ItemSKU}{\" \"}\n                {\"Quantity : \"}{record.ItemQuantity}{\" \"}\n                <span className=\"badge bg-primary rounded-pill\">{record.ItemQuantity * record.ItemPrice}{\" PKR\"}</span>\n                <a style={{color:\"red\"}} id=\"closeButton\" className=\"fas fa-times-circle\" onClick={() => onDelete(record.ItemSKU)}></a>\n                </li>\n            </ul>);\n        })}\n        </div>\n    );\n}\n\n\nconst mapStateToProps = state=>({\n        poslist: state.pos.list  \n})\n\nconst mapActionToProps =  {\n    fetchAllPos: actions.fetchall,\n    deletePos: actions.Delete\n}\n\nexport default connect(mapStateToProps,mapActionToProps)(Preview);","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\sales_master.js",["156","157","158","159","160"],"import React, {useState} from 'react';\nimport './forms.scss'\nimport {connect} from 'react-redux';\nimport * as actions from '../actions/pos';\nimport PrintInvoice from './PrintInvoice'\nimport * as Sales_preview from './Sales_preview';\n\n\n\n\n\nfunction SalesMaster(props) {\n   var today = new Date();\n   var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n\n   const temp=localStorage.getItem(\"username\");\n   \n    const initial={\n       SaleType:\"Normal\",\n         BillCreatedBy:temp,\n        BillCreatedOn:date,\n        CustomerName:'',\n        CustomerCNIC:'',\n        CustomerAddress:'',\n        DeliveryCharges:'',\n        InstallationChares:0,\n    }\n\n    const [values,setValues] = useState(initial);\n    const [method,setMethod]=useState([\"Bank Transfer\"]);\n    const [change,setChange]=useState(0);\n    const [price,setPrice]=useState(0);\n    const [amount,setAmount]=useState(0);\n    const changes=amount-price;\n    \n    const handleAdvance=e=>{\n      if(window.confirm(\"Give Product on Advance?\"))\n      {\n         window.alert(\"OK\")\n      }\n      else{\n         window.alert(\"cancel\")\n      }\n      \n   }\n    \n    console.log(changes);\n    //setChange(amount-price);\n    console.log(method);\n \n    const handleSubmit =e=>{\n       console.log(\"Now Putting into lists\");\n       e.preventDefault();\n       console.log(values);\n       actions.TableString.StringOfTable=\"BillMaster_POS\";\n       props.createPos(values,()=>{window.alert('New Sale Completed')});\n       Sales_preview.reRender.reRender+=1\n\n    }\n    const handleInputChange=e=>{\n       const {name,value}=e.target\n       setValues({\n          ...values,\n          [name]: value\n       })\n    }\n \n     return (\n       <div className=\"Sales_master\">\n          <section className=\"pos\">\n    <h1 className=\"title\">CheckOut</h1>\n    <form className=\"contact-form row\" onSubmit={handleSubmit}>\n    <div className=\"form-field col-lg-6\">\n\n          <a name=\"BillCreatedBy\"   id=\"posName\" className=\"input-text js-input\">SalesMan = {temp}</a>\n          <label className=\"label\" for=\"\">POS Employee Name</label>\n       </div>\n\n       <div className=\"form-field col-lg-6 \">\n          <input name=\"CustomerName\" value={values.CustomerName} onChange={handleInputChange}  id=\"Customer\" className=\"input-text js-input\" type=\"text\" required/>\n          <label className=\"label\" for=\"company\">Customer Name</label>\n       </div>\n\n        <div className=\"form-field col-lg-6 \">\n          <input name=\"CustomerCNIC\" value={values.CustomerCNIC} onChange={handleInputChange}  id=\"phone\" className=\"input-text js-input\" type=\"text\" required/>\n          <label className=\"label\" for=\"phone\">Contact Number</label>\n       </div>\n\n       <div className=\"form-field col-lg-6 \">\n            <input name=\"DeliveryCharges\" value={values.DeliveryCharges} onChange={handleInputChange}  id=\"Delivery\" className=\"input-text js-input\" type=\"Quantity\" />\n            <label className=\"label\" for=\"Delivery\">Delivery Charges</label>\n       </div>\n\n       <div className=\"form-field col-lg-6 \">\n       <input name=\"InstallationChares\" value={values.InstallationChares} onChange={handleInputChange}  id=\"Installation\" className=\"input-text js-input\" type=\"Quantity\" />\n          <label className=\"label\" for=\"Installation\">Installation Charges</label>\n       </div>\n       <div className=\"form-field col-lg-6 \">\n       <input name=\"BillCreatedOn\" value={values.BillCreatedOn} onChange={handleInputChange}  id=\"billDate\" className=\"input-text js-input\" type=\"Date\" />\n          <label className=\"label\">BILL DATE</label>\n       </div>\n       <div className=\"form-field col-lg-6 \">\n          <label className=\"label\" for=\"payment\">Payment Method</label>\n          <select className=\"form-select\" name=\"Payment\" id=\"pay\" value={method} onChange={e=>setMethod(e.target.value)}  >\n         <option value=\"Bank Transfer\">Bank Transfer</option>\n         <option value=\"Cheque\">Cheque</option>\n         <option value=\"Cash\">Cash</option>\n     </select>\n     </div>\n     \n     <div>\n         {\n           method === 'Bank Transfer' ? (\n       <div>\n          <form className=\"contact-form row\">\n          <div className=\"form-field col-lg-6\">\n             <input name=\"bName\"   id=\"Bank\" className=\"input-text js-input\" type=\"text\" required/>\n             <label className=\"label\" for=\"Bank\">Bank Name</label>\n          </div>\n          <div className=\"form-field col-lg-6\">\n             <input name=\"aNumber\"  id=\"Bank\" className=\"input-text js-input\" type=\"Number\" required/>\n             <label className=\"label\" for=\"Bank\">Bank Account Number</label>\n          </div>\n          </form>\n       \n       </div>\n       \n           ) : method === 'Cheque' ? (\n             <div>   \n                <div>\n             <form className=\"contact-form row\">\n             <div className=\"form-field col-lg-6\">\n                <input name=\"bName\"   id=\"Cheque\" className=\"input-text js-input\" type=\"text\" required/>\n                <label className=\"label\" for=\"Bank\">Bank Name</label>\n             </div>\n             <div className=\"form-field col-lg-6\">\n                <input name=\"chNumber\"   id=\"Cheque\" className=\"input-text js-input\" type=\"Number\" required/>\n                <label className=\"label\" for=\"Bank\">Cheque Number</label>\n             </div>\n             </form>\n          \n          </div></div>\n           ) : method === 'Cash' ? (\n             \n                <div>\n             <form className=\"contact-form row\">\n            <div className=\"form-field col-lg-6\">\n               <input name=\"Amount\"   id=\"Cash\" className=\"input-text js-input\" type=\"text\" onChange={e=>setAmount(e.target.value)} required/>\n               <label className=\"label\" for=\"Bank\">Amount</label>\n            </div>\n            \n            <div className=\"form-field col-lg-6 \">\n               <label className=\"label\" for=\"Change\">Change: {changes} PKR</label>\n            </div>\n            </form>\n            </div>\n           \n           ) : null\n         }\n       </div>\n       <div className=\"form-field col-lg-6 \">\n          <label className=\"label\" for=\"payment\">Sale Type</label>\n          <select className=\"form-select\" name=\"Type\" id=\"pay\" value={values.SaleType} onChange={handleInputChange}  >\n         <option value=\"Normal\">Normal</option>\n         <option value=\"Credit\">Credit</option>\n         \n     </select>\n     </div>\n       \n       <div className=\"form-field col-lg-12\">\n          <input name=\"CustomerAddress\" value={values.CustomerAddress} onChange={handleInputChange}   id=\"Address\" className=\"input-text js-input\" type=\"text\" required/>\n          <label className=\"label\" for=\"Address\">Address</label>\n       </div>\n       <div className=\"form-field col-lg-12\">\n      </div>\n       <div className=\"form-field col-lg-12\">\n          <input  className=\"submit-btn\" type=\"submit\" value=\"Make Sale\"/>\n       </div>\n       <PrintInvoice />\n    </form>\n </section>\n       </div>\n     );\n   }\n \n \n   const mapStateToProps = state=>({\n      poslist: state.pos.list  \n   })\n   \n   const mapActionToProps =  {\n   createPos: actions.create,\n \n \n   }\n   \n   export default connect(mapStateToProps,mapActionToProps)(SalesMaster);\n   \n \n ","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\Add.js",["161","162","163","164"],"import React, { useState, useEffect } from \"react\";\nimport AddItemModal from \"./AddItemModal\";\nimport \"./forms.scss\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/pos\";\nimport { Table } from \"react-bootstrap\";\nconst products = [];\n\nvar tableRowIndex = 0;\n\n\n\n//TableRow\nfunction TableRow({ row, handleDataChange, deleteRow }, props) {\n\n\n\n\n\n  const [ItemQuantity, handleChangeItemQuantity] = useState(1);\n  const [ItemSKU, handleChangeItemSKU] = useState(row.ItemSKU);\n  const [ItemPrice, handleChangeItemPrice] = useState(row.ItemPrice);\n  const index = row.index;\n\n  const updateValues = (e) => {\n    var inputName = e.target.name;\n    var inputValue = e.target.value;\n    switch (inputName) {\n      case \"ItemQuantity\":\n        handleChangeItemQuantity(inputValue);\n        break;\n      case \"ItemPrice\":\n        handleChangeItemPrice(inputValue);\n        break;\n      case \"ItemSKU\":\n        handleChangeItemSKU(e.currentTarget.value);\n        break;\n\n      default:\n        break;\n    }\n\n  };\n\n\n  const removeRow = () => {\n    deleteRow(index);\n  };\n\n  useEffect(() => {\n\n    console.log(index);\n    handleChangeItemSKU(products[row.index - 1])\n    handleDataChange({\n      index: index,\n      ItemQuantity: ItemQuantity,\n      ItemSKU: ItemSKU,\n      ItemPrice: ItemPrice,\n    });\n\n  }, [ItemQuantity, ItemPrice, ItemSKU, products], [])\n  let product = ItemPrice * ItemQuantity;\n  return (\n    <tr>\n      <th scope=\"row\">{index}</th>\n      <td>\n        <div className=\"form-field col-lg-6\">\n          <input\n            name=\"ItemSKU\"\n            defaultValue={ItemSKU}\n\n            onChange={(e) => updateValues(e)}\n            id=\"ItemSKU\"\n            className=\"input-text js-input\"\n            type=\"text\"\n            required\n          />\n        </div>\n      </td>\n      <td>\n        <div className=\"form-field col-lg-6 \">\n          <input\n            name=\"ItemQuantity\"\n            onChange={(e) => updateValues(e)}\n            id=\"ItemQuantity\"\n            className=\"input-text js-input\"\n            type=\"Number\"\n            defaultValue={ItemQuantity}\n            required\n          />\n        </div>\n      </td>\n      <td>\n        <div className=\"form-field col-lg-6 \">\n          <input\n            name=\"ItemPrice\"\n            onChange={(e) => updateValues(e)}\n            id=\"ItemPrice\"\n            className=\"input-text js-input\"\n            type=\"Amount\"\n            required\n          />\n        </div>\n      </td>\n      <td>\n        {product}\n        {\" PKR\"}\n\n      </td>\n      <td>\n        <button type=\"button\" className=\"btn btn-remove\" onClick={removeRow}>\n          &times;\n        </button>\n      </td>\n    </tr>\n  );\n}\n\n//Add\nfunction Add(props) {\n  const [active, setActive] = useState(0);\n  const [filtered, setFiltered] = useState([]);\n  const [isShow, setIsShow] = useState(false);\n  const [input, setInput] = useState(\"\");\n\n  const onChange = (e) => {\n    const suggestions = [\"121241\", \"143123\", \"8471239\"];\n    const input = e.currentTarget.value;\n    const newFilteredSuggestions = suggestions.filter(\n      (suggestion) => suggestion.toLowerCase().indexOf(input.toLowerCase()) > -1\n    );\n    setActive(0);\n    setFiltered(newFilteredSuggestions);\n    setIsShow(true);\n    setInput(e.currentTarget.value);\n  };\n  const onClick = (e) => {\n    setActive(0);\n    setFiltered([]);\n    setIsShow(false);\n    setInput(e.currentTarget.innerText);\n  };\n  const onKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      setActive(0);\n      setIsShow(false);\n      setInput(filtered[active]);\n    } else if (e.key === \"ArrowUp\") {\n      return active === 0 ? null : setActive(active - 1);\n    } else if (e.key === \"ArrowDown\") {\n      return active - 1 === filtered.length ? null : setActive(active + 1);\n    }\n  };\n  const renderAutocomplete = () => {\n    if (isShow && input) {\n      if (filtered.length) {\n        return (\n          <ul className=\"autocomplete\">\n            {filtered.map((suggestion, index) => {\n              let className;\n              if (index === active) {\n                className = \"active\";\n              }\n              return (\n                <li className={className} key={suggestion} onClick={onClick}>\n                  {suggestion}\n                </li>\n              );\n            })}\n          </ul>\n        );\n      } else {\n        return (\n          <div className=\"no-autocomplete\">\n            <em>Not found</em>\n          </div>\n        );\n      }\n    }\n    return <></>;\n  };\n  const [sum,setSum]=useState(0)\n  const [talbeRows, setRows] = useState([\n    {\n      index: 0,\n      ItemSKU: \"\",\n      ItemQuantity: 1,\n      ItemPrice: 0,\n    },\n  ]);\n\n\n\n  const handleChange = (data) => {\n    talbeRows[data.index] = data;\n  };\n\n  const addNewRow = () => {\n    tableRowIndex = parseFloat(tableRowIndex) + 1;\n    var updatedRows = [...talbeRows];\n    updatedRows[tableRowIndex] = {\n      index: tableRowIndex,\n      ItemSKU: \"\",\n      ItemQuantity: 1,\n      ItemPrice: 0,\n    };\n    setRows(updatedRows);\n  };\n\n  const deleteRow = (index) => {\n    if (talbeRows.length > 1) {\n      var updatedRows = [...talbeRows];\n      var indexToRemove = updatedRows.findIndex((x) => x.index == index);\n      if (indexToRemove > -1) {\n        updatedRows.splice(indexToRemove, 1);\n        setRows(updatedRows);\n      }\n    }\n  };\n\n  const handleKeyDown = (event, index) => {\n    if (event.key === \"Enter\") {\n      products.push(event.currentTarget.value);\n      event.target.value = \"\";\n      addNewRow();\n      console.log(...talbeRows);\n\n    }\n  };\n\n  const handleSubmit = (e) => {\n    console.log(...talbeRows)\n    actions.TableString.StringOfTable = \"Bill_Child_Temp\";\n\n    e.preventDefault();\n    console.log(TableRow);\n    talbeRows.forEach(function (arrayItem) {\n      props.createPos(arrayItem, () => { })\n      console.log(arrayItem);\n    });\n    setRows([\n      {\n        index: 0,\n        ItemSKU: \"\",\n        ItemQuantity: 1,\n        ItemPrice: 0,\n      },\n    ]);\n\n    window.alert(\"Product Added\");\n  };\n  function onKeyDownparent(event) {\n    onKeyDown(event);\n    handleKeyDown(event);\n  }\n\nconst handleSum=(e)=>{\n  setSum(talbeRows.reduce((acc, record) => (acc + record.ItemQuantity * record.ItemPrice), 0))\n}\n\n  return (\n    <div className=\"container\">\n      <section className=\"pos\">\n        <h1 className=\"title\">Point Of Sales Terminal</h1>\n        <form className=\"contact-form row\" onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"search__container\">\n              <input\n                name=\"product\"\n                className=\"search__input\"\n                type=\"text\"\n                placeholder=\"Enter Product Name\"\n                onChange={onChange}\n                onKeyDown={onKeyDownparent}\n                value={input}\n              />\n              {renderAutocomplete()}\n\n            </div>\n            <div className=\"title\">\n              <AddItemModal />\n            </div>\n\n            <table className=\"table\" id=\"customers\">\n              <thead className=\"thead-light\">\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">SKU</th>\n                  <th scope=\"col\">Quantity</th>\n                  <th scope=\"col\">Unit Price</th>\n                  <th scope=\"col\">SubTotal</th>\n                  <th scope=\"col\">Delete</th>\n                </tr>\n              </thead>\n              <tbody>\n                {talbeRows.map((row, index) => {\n                  if (row)\n                    return (\n                      <TableRow\n                        key={index}\n                        row={row}\n                        handleDataChange={handleChange}\n                        deleteRow={deleteRow}\n                      ></TableRow>\n                    );\n                })}\n              </tbody>\n            </table>\n            <table className=\"table table-condensed table-bordered table-striped\">\n              <tbody>\n                <tr>\n                  <td>\n                      <b className=\"btn btn-success\" onClick={handleSum}>Total +</b>\n                    <div className=\"pull-right\">\n                      <b>Items:</b>\n                      <span className=\"total_quantity\">{tableRowIndex}{ }</span>\n\n                      <b>Total: </b>\n                      <span className=\"price_total\">{sum}</span>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <div className=\"form-field col-lg-12\">\n              <input\n                className=\"btn btn-primary submit-btn\"\n                value=\"Add Products\"\n                onClick={handleSubmit}\n              />\n            </div>\n          </div>\n        </form>\n      </section>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  poslist: state.pos.list,\n});\n\nconst mapActionToProps = {\n  createPos: actions.create,\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Add);\n","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\actions\\pos.js",[],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\WareHouse.js",["165"],"import React from 'react';\nimport * as actions from '../actions/pos';\nimport {connect} from 'react-redux';\nimport {useState} from 'react';\nimport './forms.scss'\nimport { ToastContainer,toast } from 'react-toastify';\n\n\nfunction WareHouse(props){\n   \n    const intialvalues={\n        ItemBrand:'Haier',\n        ItemType:'AC',\n        Item_ModelNumber:'',\n        Quantity:'',\n        WareHouseID:'1',\n        UnitPrice:''\n     }\n     const [values,setValues] = useState(intialvalues);\n\n     \n     const handleSubmit =e=>{\n         actions.TableString.StringOfTable=\"StockDetails\";\n\n        console.log(\"Now Putting into lists\")\n        \n        e.preventDefault();\n        console.log(values);\n        props.createPos(values,()=>{window.alert('New Product Added to Inventory')})\n     }\n     const handleInputChange=e=>{\n        const {name,value}=e.target\n        setValues({\n           ...values,\n           [name]: value\n        })\n     }\n\n\n\n\n\n    return(\n        <div style={{paddingLeft:\"10vw\"}}>\n            <section className=\"pos\">\n            <form className=\"contact-form row\" onSubmit={handleSubmit}>\n            <h3 className=\"subtitle\">Add New items in stock</h3>\n            <div className=\"form-field col-lg-6\">\n                \n            <label className=\"label\">Location</label> \n                <select name=\"WareHouseID\" onChange={handleInputChange} value={values.WareHouseID}>\n                        \n                    <option value=\"1\">WareHouse#1</option>\n                    <option value=\"2\">WareHouse#2</option>\n                    <option value=\"3\">Shop</option>\n                </select>\n                </div>\n                \n      \n      <div className=\"form-field col-lg-6\">\n         <input name=\"Item_ModelNumber\" onChange={handleInputChange} value={values.Item_ModelNumber} id=\"SKU\" className=\"input-text js-input\" type=\"text\" required/>\n         <label className=\"label\" for=\"\">Product SKU</label>\n      </div>\n      <div className='form-field col-lg-6'>\n            <input name=\"Quantity\" onChange={handleInputChange} value={values.Quantity} id=\"Quantity\" className=\"input-text js-input\" type=\"number\" required/>\n            <label className=\"label\" for=''>Quantity</label>\n        </div>\n\n        <div className=\"form-field col-lg-6\">\n         <input name=\"UnitPrice\" onChange={handleInputChange} value={values.UnitPrice} id=\"Cost\" className=\"input-text js-input\" type=\"Number\"  required/>\n         <label className=\"label\" for=\"Number\">Product Cost</label>\n      </div>\n\n        <div className=\"form-field col-lg-12\">\n         <input  className=\"submit-btn\" type=\"submit\" value=\"Add Products\"/>\n      </div>\n\n            </form>\n            \n            \n            </section>\n            <ToastContainer />\n        </div>\n    );\n}\n\nactions.TableString.StringOfTable=\"StockDetails\";\n\n  const mapStateToProps = state=>({\n     poslist: state.pos.list  \n  })\n  \n  const mapActionToProps =  {\n  createPos: actions.create,\n\n\n  }\n\nexport default connect(mapStateToProps,mapActionToProps)(WareHouse);\n","C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Login\\Login.js",["166","167"],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\reducers\\index.js",[],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\Components\\PrintInvoice.js",["168","169"],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\actions\\api.js",[],"C:\\Users\\Umair\\Desktop\\WEProjectFinal\\src\\reducers\\pos.js",[],{"ruleId":"170","severity":1,"message":"171","line":16,"column":8,"nodeType":"172","messageId":"173","endLine":16,"endColumn":21},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"170","severity":1,"message":"178","line":2,"column":9,"nodeType":"172","messageId":"173","endLine":2,"endColumn":15},{"ruleId":"170","severity":1,"message":"179","line":53,"column":7,"nodeType":"172","messageId":"173","endLine":53,"endColumn":12},{"ruleId":"180","severity":1,"message":"181","line":106,"column":17,"nodeType":"182","endLine":106,"endColumn":94},{"ruleId":"180","severity":1,"message":"183","line":124,"column":17,"nodeType":"182","endLine":124,"endColumn":126},{"ruleId":"180","severity":1,"message":"183","line":140,"column":17,"nodeType":"182","endLine":140,"endColumn":140},{"ruleId":"180","severity":1,"message":"183","line":156,"column":17,"nodeType":"182","endLine":156,"endColumn":129},{"ruleId":"180","severity":1,"message":"181","line":339,"column":25,"nodeType":"182","endLine":339,"endColumn":63},{"ruleId":"180","severity":1,"message":"181","line":342,"column":25,"nodeType":"182","endLine":342,"endColumn":63},{"ruleId":"180","severity":1,"message":"181","line":346,"column":25,"nodeType":"182","endLine":346,"endColumn":63},{"ruleId":"174","replacedBy":"184"},{"ruleId":"176","replacedBy":"185"},{"ruleId":"180","severity":1,"message":"183","line":52,"column":21,"nodeType":"182","endLine":52,"endColumn":89},{"ruleId":"180","severity":1,"message":"183","line":61,"column":21,"nodeType":"182","endLine":61,"endColumn":67},{"ruleId":"180","severity":1,"message":"183","line":70,"column":21,"nodeType":"182","endLine":70,"endColumn":66},{"ruleId":"180","severity":1,"message":"183","line":85,"column":21,"nodeType":"182","endLine":85,"endColumn":68},{"ruleId":"180","severity":1,"message":"183","line":97,"column":21,"nodeType":"182","endLine":97,"endColumn":65},{"ruleId":"180","severity":1,"message":"183","line":109,"column":20,"nodeType":"182","endLine":109,"endColumn":50},{"ruleId":"170","severity":1,"message":"186","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":13},{"ruleId":"170","severity":1,"message":"187","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":20},{"ruleId":"170","severity":1,"message":"188","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":15},{"ruleId":"189","severity":1,"message":"190","line":39,"column":23,"nodeType":"191","messageId":"192","endLine":39,"endColumn":25},{"ruleId":"189","severity":1,"message":"193","line":62,"column":23,"nodeType":"191","messageId":"192","endLine":62,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":64,"column":58,"nodeType":"191","messageId":"192","endLine":64,"endColumn":60},{"ruleId":"194","severity":1,"message":"195","line":70,"column":8,"nodeType":"196","endLine":70,"endColumn":19,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":13,"column":9,"nodeType":"182","messageId":"200","endLine":13,"endColumn":25},{"ruleId":"170","severity":1,"message":"201","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":23},{"ruleId":"170","severity":1,"message":"202","line":3,"column":25,"nodeType":"172","messageId":"173","endLine":3,"endColumn":31},{"ruleId":"170","severity":1,"message":"203","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":25},{"ruleId":"170","severity":1,"message":"204","line":44,"column":11,"nodeType":"172","messageId":"173","endLine":44,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":45,"column":47,"nodeType":"191","messageId":"192","endLine":45,"endColumn":49},{"ruleId":"189","severity":1,"message":"190","line":49,"column":47,"nodeType":"191","messageId":"192","endLine":49,"endColumn":49},{"ruleId":"189","severity":1,"message":"190","line":53,"column":47,"nodeType":"191","messageId":"192","endLine":53,"endColumn":49},{"ruleId":"189","severity":1,"message":"190","line":57,"column":47,"nodeType":"191","messageId":"192","endLine":57,"endColumn":49},{"ruleId":"194","severity":1,"message":"195","line":23,"column":8,"nodeType":"196","endLine":23,"endColumn":10,"suggestions":"205"},{"ruleId":"170","severity":1,"message":"206","line":2,"column":19,"nodeType":"172","messageId":"173","endLine":2,"endColumn":27},{"ruleId":"194","severity":1,"message":"207","line":24,"column":8,"nodeType":"196","endLine":24,"endColumn":27,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":44,"column":17,"nodeType":"182","endLine":44,"endColumn":132},{"ruleId":"180","severity":1,"message":"183","line":44,"column":17,"nodeType":"182","endLine":44,"endColumn":132},{"ruleId":"170","severity":1,"message":"211","line":31,"column":12,"nodeType":"172","messageId":"173","endLine":31,"endColumn":18},{"ruleId":"170","severity":1,"message":"212","line":31,"column":19,"nodeType":"172","messageId":"173","endLine":31,"endColumn":28},{"ruleId":"170","severity":1,"message":"213","line":32,"column":18,"nodeType":"172","messageId":"173","endLine":32,"endColumn":26},{"ruleId":"170","severity":1,"message":"214","line":36,"column":11,"nodeType":"172","messageId":"173","endLine":36,"endColumn":24},{"ruleId":"180","severity":1,"message":"183","line":75,"column":11,"nodeType":"182","endLine":75,"endColumn":82},{"ruleId":"170","severity":1,"message":"215","line":6,"column":10,"nodeType":"172","messageId":"173","endLine":6,"endColumn":15},{"ruleId":"194","severity":1,"message":"216","line":61,"column":6,"nodeType":"196","endLine":61,"endColumn":50,"suggestions":"217"},{"ruleId":"189","severity":1,"message":"190","line":213,"column":64,"nodeType":"191","messageId":"192","endLine":213,"endColumn":66},{"ruleId":"218","severity":1,"message":"219","line":296,"column":45,"nodeType":"220","messageId":"221","endLine":296,"endColumn":47},{"ruleId":"170","severity":1,"message":"222","line":6,"column":25,"nodeType":"172","messageId":"173","endLine":6,"endColumn":30},{"ruleId":"170","severity":1,"message":"178","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":16},{"ruleId":"170","severity":1,"message":"223","line":4,"column":18,"nodeType":"172","messageId":"173","endLine":4,"endColumn":29},{"ruleId":"170","severity":1,"message":"224","line":10,"column":15,"nodeType":"172","messageId":"173","endLine":10,"endColumn":22},{"ruleId":"194","severity":1,"message":"195","line":23,"column":8,"nodeType":"196","endLine":23,"endColumn":10,"suggestions":"225"},"no-unused-vars","'StockTransfer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["226"],"no-negated-in-lhs",["227"],"'Outlet' is defined but never used.","'yAxis' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",["226"],["227"],"'Sales' is defined but never used.","'SalesPreview' is defined but never used.","'Preview' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["228"],"react/jsx-pascal-case","Imported JSX component Sales_preview must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","'faTimesCircle' is defined but never used.","'faEdit' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'onDelete' is assigned a value but never used.",["229"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'props' and 'temp'. Either include them or remove the dependency array. Outer scope values like 'reRender.reRender' aren't valid dependencies because mutating them doesn't re-render the component.",["230"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'change' is assigned a value but never used.","'setChange' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'handleAdvance' is assigned a value but never used.","'Table' is defined but never used.","React Hook useEffect has missing dependencies: 'handleDataChange', 'index', and 'row.index'. Either include them or remove the dependency array. Outer scope values like 'products' aren't valid dependencies because mutating them doesn't re-render the component.",["231"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'toast' is defined but never used.","'useNavigate' is defined but never used.","'setDate' is assigned a value but never used.",["232"],"no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"235","fix":"241"},"Update the dependencies array to be: [currentId, props]",{"range":"242","text":"243"},"Update the dependencies array to be: [props]",{"range":"244","text":"245"},"Update the dependencies array to be: [props, temp]",{"range":"246","text":"247"},"Update the dependencies array to be: [ItemQuantity, ItemPrice, ItemSKU, index, row.index, handleDataChange]",{"range":"248","text":"249"},{"range":"250","text":"245"},[1786,1797],"[currentId, props]",[464,466],"[props]",[496,515],"[props, temp]",[1322,1366],"[ItemQuantity, ItemPrice, ItemSKU, index, row.index, handleDataChange]",[636,638]]