{"ast":null,"code":"import api from './api';\nconst Tables = {\n  BillChild_POS: \"BillChild_POS/\",\n  BillMaster_POS: \"BillMaster_POS/\",\n  EmployeeRecord: \"EmployeeRecord/\",\n  ItemDetails: \"ItemDetails/\",\n  StockDetails: \"StockDetails/\",\n  StockTransfer: \"StockTransfer\",\n  UserLogin: \"UserLogin/\",\n  UserRights: \"UserRights/\",\n  UserTypeRecord: \"UserTypeRecord/\",\n  WareHouse: \"WareHouse/\"\n};\nconst baseurl = \"http://localhost:5000/api/\";\nexport const ACTION_TYPES = {\n  CREATE: 'CREATE',\n  UPDATE: 'UPDATE',\n  DELETE: 'DELETE',\n  FETCH_ALL: 'FETCH_ALL'\n};\nexport const fetchall = () => dispatch => {\n  api.pos(baseurl, Tables.BillChild_POS).fetchAll().then(response => {\n    console.log(response);\n    dispatch({\n      type: ACTION_TYPES.FETCH_ALL,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const create = (data, onSuccess) => dispatch => {\n  api.pos().create(data).then(response => {\n    dispatch({\n      type: ACTION_TYPES.CREATE,\n      payload: response.data\n    });\n    onSuccess();\n  }).catch(err => console.log(err));\n};\nexport const update = (data, id, onSuccess) => dispatch => {\n  api.pos().update(id, data).then(response => {\n    dispatch({\n      type: ACTION_TYPES.UPDATE,\n      payload: {\n        id,\n        ...data\n      }\n    });\n    onSuccess();\n  }).catch(err => console.log(err));\n};\nexport const Delete = (id, onSuccess) => dispatch => {\n  api.pos().delete(id).then(response => {\n    dispatch({\n      type: ACTION_TYPES.DELETE,\n      payload: id\n    });\n    onSuccess();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/maazasim/homeelectronics/src/actions/pos.js"],"names":["api","Tables","BillChild_POS","BillMaster_POS","EmployeeRecord","ItemDetails","StockDetails","StockTransfer","UserLogin","UserRights","UserTypeRecord","WareHouse","baseurl","ACTION_TYPES","CREATE","UPDATE","DELETE","FETCH_ALL","fetchall","dispatch","pos","fetchAll","then","response","console","log","type","payload","data","catch","err","create","onSuccess","update","id","Delete","delete"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,MAAMC,MAAM,GAAC;AACTC,EAAAA,aAAa,EAAC,gBADL;AAETC,EAAAA,cAAc,EAAC,iBAFN;AAGTC,EAAAA,cAAc,EAAC,iBAHN;AAITC,EAAAA,WAAW,EAAC,cAJH;AAKTC,EAAAA,YAAY,EAAC,eALJ;AAMTC,EAAAA,aAAa,EAAC,eANL;AAOTC,EAAAA,SAAS,EAAC,YAPD;AAQTC,EAAAA,UAAU,EAAC,aARF;AASTC,EAAAA,cAAc,EAAC,iBATN;AAUTC,EAAAA,SAAS,EAAC;AAVD,CAAb;AAaI,MAAMC,OAAO,GAAG,4BAAhB;AAGJ,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAC,QADiB;AAExBC,EAAAA,MAAM,EAAC,QAFiB;AAGxBC,EAAAA,MAAM,EAAE,QAHgB;AAIxBC,EAAAA,SAAS,EAAC;AAJc,CAArB;AAOP,OAAO,MAAMC,QAAQ,GAAG,MAAMC,QAAQ,IAAI;AACtCnB,EAAAA,GAAG,CAACoB,GAAJ,CAAQR,OAAR,EAAgBX,MAAM,CAACC,aAAvB,EAAsCmB,QAAtC,GACCC,IADD,CACMC,QAAQ,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAJ,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAACb,YAAY,CAACI,SADb;AAELU,MAAAA,OAAO,EAACJ,QAAQ,CAACK;AAFZ,KAAD,CAAR;AAKH,GARL,EAUCC,KAVD,CAUOC,GAAG,IAAEN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAVZ;AAYH,CAbM;AAcP,OAAO,MAAMC,MAAM,GAAG,CAACH,IAAD,EAAMI,SAAN,KAAoBb,QAAQ,IAAI;AAClDnB,EAAAA,GAAG,CAACoB,GAAJ,GAAUW,MAAV,CAAiBH,IAAjB,EACCN,IADD,CACMC,QAAQ,IAAE;AACZJ,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAACb,YAAY,CAACC,MADb;AAELa,MAAAA,OAAO,EAACJ,QAAQ,CAACK;AAFZ,KAAD,CAAR;AAIAI,IAAAA,SAAS;AACZ,GAPD,EAQCH,KARD,CAQOC,GAAG,IAAEN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CARZ;AASH,CAVM;AAYP,OAAO,MAAMG,MAAM,GAAG,CAACL,IAAD,EAAMM,EAAN,EAASF,SAAT,KAAuBb,QAAQ,IAAI;AACrDnB,EAAAA,GAAG,CAACoB,GAAJ,GAAUa,MAAV,CAAiBC,EAAjB,EAAoBN,IAApB,EACCN,IADD,CACMC,QAAQ,IAAE;AACZJ,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAACb,YAAY,CAACE,MADb;AAELY,MAAAA,OAAO,EAAC;AAACO,QAAAA,EAAD;AAAI,WAAGN;AAAP;AAFH,KAAD,CAAR;AAIAI,IAAAA,SAAS;AACZ,GAPD,EAQCH,KARD,CAQOC,GAAG,IAAEN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CARZ;AASH,CAVM;AAYP,OAAO,MAAMK,MAAM,GAAG,CAACD,EAAD,EAAIF,SAAJ,KAAkBb,QAAQ,IAAI;AAChDnB,EAAAA,GAAG,CAACoB,GAAJ,GAAUgB,MAAV,CAAiBF,EAAjB,EACCZ,IADD,CACMC,QAAQ,IAAE;AACZJ,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAACb,YAAY,CAACG,MADb;AAELW,MAAAA,OAAO,EAACO;AAFH,KAAD,CAAR;AAIAF,IAAAA,SAAS;AACZ,GAPD,EAQCH,KARD,CAQOC,GAAG,IAAEN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CARZ;AASH,CAVM","sourcesContent":["import api from './api';\n\nconst Tables={\n    BillChild_POS:\"BillChild_POS/\",\n    BillMaster_POS:\"BillMaster_POS/\",\n    EmployeeRecord:\"EmployeeRecord/\",\n    ItemDetails:\"ItemDetails/\",\n    StockDetails:\"StockDetails/\",\n    StockTransfer:\"StockTransfer\",\n    UserLogin:\"UserLogin/\",\n    UserRights:\"UserRights/\",\n    UserTypeRecord:\"UserTypeRecord/\",\n    WareHouse:\"WareHouse/\"\n    }\n    \n    const baseurl = \"http://localhost:5000/api/\";\n\n\nexport const ACTION_TYPES = {\n    CREATE:'CREATE',\n    UPDATE:'UPDATE',\n    DELETE :'DELETE',\n    FETCH_ALL:'FETCH_ALL'\n}\n\nexport const fetchall = () => dispatch => {\n    api.pos(baseurl,Tables.BillChild_POS).fetchAll()\n    .then(response => {\n            console.log(response)\n            dispatch({\n                type:ACTION_TYPES.FETCH_ALL,\n                payload:response.data\n            })\n            \n        }\n    )\n    .catch(err=>console.log(err))\n   \n}\nexport const create = (data,onSuccess) => dispatch => {\n    api.pos().create(data)\n    .then(response=>{\n        dispatch({\n            type:ACTION_TYPES.CREATE,\n            payload:response.data\n        })\n        onSuccess()\n    })\n    .catch(err=>console.log(err))\n}\n\nexport const update = (data,id,onSuccess) => dispatch => {\n    api.pos().update(id,data)\n    .then(response=>{\n        dispatch({\n            type:ACTION_TYPES.UPDATE,\n            payload:{id,...data}\n        })\n        onSuccess()\n    })\n    .catch(err=>console.log(err))\n}\n\nexport const Delete = (id,onSuccess) => dispatch => {\n    api.pos().delete(id)\n    .then(response=>{\n        dispatch({\n            type:ACTION_TYPES.DELETE,\n            payload:id \n        })\n        onSuccess()\n    })\n    .catch(err=>console.log(err))\n}"]},"metadata":{},"sourceType":"module"}