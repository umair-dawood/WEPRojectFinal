{"ast":null,"code":"var _jsxFileName = \"/Users/maazasim/homeelectronics/src/Components/Add.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar tableRowIndex = 0;\n\nfunction TableRow(_ref) {\n  _s();\n\n  let {\n    row,\n    handleDataChange,\n    deleteRow\n  } = _ref;\n  const index = row.index;\n  const [first_name, handleChangeFirstName] = useState(row.first_name);\n  const [last_name, handleChangeLastName] = useState(row.last_name);\n\n  const updateValues = e => {\n    var inputName = e.target.name;\n    var inputValue = e.target.value;\n\n    if (inputName == 'first_name') {\n      handleChangeFirstName(inputValue);\n    } else if (inputName == 'last_name') {\n      handleChangeLastName(inputValue);\n    }\n\n    handleDataChange({\n      index: index,\n      first_name: first_name,\n      last_name: last_name\n    });\n  };\n\n  const removeRow = () => {\n    deleteRow(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      scope: \"row\",\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-field col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-text js-input\",\n          type: \"text\",\n          onChange: onChange,\n          onKeyDown: onKeyDown,\n          value: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this), renderAutocomplete()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), \"    \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-field col-lg-6 \",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"ItemQuantity\",\n          onChange: handleInputChange,\n          value: values.ItemQuantity,\n          id: \"ItemQuantity\",\n          className: \"input-text js-input\",\n          type: \"Number\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-field col-lg-6 \",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"ItemPrice\",\n          onChange: handleInputChange,\n          value: values.ItemPrice,\n          id: \"Price\",\n          className: \"input-text js-input\",\n          type: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [values.ItemPrice * values.ItemQuantity, \" PKR\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TableRow, \"svCjnJv4DjOboTEIPvqPpuPhjvE=\");\n\n_c = TableRow;\n\nfunction Add() {\n  _s2();\n\n  const [talbeRows, setRows] = useState([{\n    index: 0,\n    first_name: \"\",\n    last_name: \"\"\n  }]); // Receive data from TableRow \n\n  const handleChange = data => {\n    talbeRows[data.index] = data;\n  }; // Add New Table Row\n\n\n  const addNewRow = () => {\n    tableRowIndex = parseFloat(tableRowIndex) + 1;\n    var updatedRows = [...talbeRows];\n    updatedRows[tableRowIndex] = {\n      index: tableRowIndex,\n      first_name: \"\",\n      last_name: \"\"\n    };\n    setRows(updatedRows);\n  }; // Remove Table row if rows are count is more than 1\n\n\n  const deleteRow = index => {\n    if (talbeRows.length > 1) {\n      var updatedRows = [...talbeRows];\n      var indexToRemove = updatedRows.findIndex(x => x.index == index);\n\n      if (indexToRemove > -1) {\n        updatedRows.splice(indexToRemove, 1);\n        setRows(updatedRows);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customers\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      id: \"customers\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: talbeRows.map((row, index) => {\n          if (row) return /*#__PURE__*/_jsxDEV(TableRow, {\n            row: row,\n            handleDataChange: handleChange,\n            deleteRow: deleteRow\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-add\",\n        onClick: addNewRow,\n        children: \"+Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Add, \"2DnCiQc89iHV0HyREp+objPYTjk=\");\n\n_c2 = Add;\nexport default Add;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableRow\");\n$RefreshReg$(_c2, \"Add\");","map":{"version":3,"sources":["/Users/maazasim/homeelectronics/src/Components/Add.js"],"names":["React","useState","tableRowIndex","TableRow","row","handleDataChange","deleteRow","index","first_name","handleChangeFirstName","last_name","handleChangeLastName","updateValues","e","inputName","target","name","inputValue","value","removeRow","onChange","onKeyDown","input","renderAutocomplete","handleInputChange","values","ItemQuantity","ItemPrice","Add","talbeRows","setRows","handleChange","data","addNewRow","parseFloat","updatedRows","length","indexToRemove","findIndex","x","splice","map"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA,IAAIC,aAAa,GAAG,CAApB;;AACA,SAASC,QAAT,OAAuD;AAAA;;AAAA,MAApC;AAACC,IAAAA,GAAD;AAAMC,IAAAA,gBAAN;AAAwBC,IAAAA;AAAxB,GAAoC;AACpD,QAAMC,KAAK,GAAGH,GAAG,CAACG,KAAlB;AACA,QAAM,CAACC,UAAD,EAAaC,qBAAb,IAAsCR,QAAQ,CAACG,GAAG,CAACI,UAAL,CAApD;AACA,QAAM,CAACE,SAAD,EAAYC,oBAAZ,IAAoCV,QAAQ,CAACG,GAAG,CAACM,SAAL,CAAlD;;AAEA,QAAME,YAAY,GAAGC,CAAC,IAAI;AACvB,QAAIC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAzB;AACA,QAAIC,UAAU,GAAGJ,CAAC,CAACE,MAAF,CAASG,KAA1B;;AACA,QAAGJ,SAAS,IAAI,YAAhB,EAA6B;AAC1BL,MAAAA,qBAAqB,CAACQ,UAAD,CAArB;AACF,KAFD,MAEM,IAAGH,SAAS,IAAI,WAAhB,EAA4B;AAC/BH,MAAAA,oBAAoB,CAACM,UAAD,CAApB;AACF;;AAEDZ,IAAAA,gBAAgB,CAAC;AACdE,MAAAA,KAAK,EAAEA,KADO;AAEdC,MAAAA,UAAU,EAAEA,UAFE;AAGdE,MAAAA,SAAS,EAAEA;AAHG,KAAD,CAAhB;AAKF,GAdD;;AAgBA,QAAMS,SAAS,GAAG,MAAM;AACrBb,IAAAA,SAAS,CAACC,KAAD,CAAT;AACF,GAFD;;AAIA,sBACG;AAAA,4BACI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEA;AAAA,8BAAI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACJ;AAAO,UAAA,SAAS,EAAC,qBAAjB;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,QAAQ,EAAEa,QAFZ;AAGE,UAAA,SAAS,EAAEC,SAHb;AAIE,UAAA,KAAK,EAAEC;AAJT;AAAA;AAAA;AAAA;AAAA,gBADI,EAOHC,kBAAkB,EAPf;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAYA;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,cAAZ;AAA2B,UAAA,QAAQ,EAAEC,iBAArC;AAAwD,UAAA,KAAK,EAAEC,MAAM,CAACC,YAAtE;AAAsF,UAAA,EAAE,EAAC,cAAzF;AAAwG,UAAA,SAAS,EAAC,qBAAlH;AAAwI,UAAA,IAAI,EAAC,QAA7I;AAAsJ,UAAA,QAAQ;AAA9J;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZA,eAiBA;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,QAAQ,EAAEF,iBAAlC;AAAqD,UAAA,KAAK,EAAEC,MAAM,CAACE,SAAnE;AAA+E,UAAA,EAAE,EAAC,OAAlF;AAA0F,UAAA,SAAS,EAAC,qBAApG;AAA0H,UAAA,IAAI,EAAC;AAA/H;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBA,eAsBA;AAAA,iBACGF,MAAM,CAACE,SAAP,GAAiBF,MAAM,CAACC,YAD3B,EACyC,MADzC;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AA4BF;;GArDQvB,Q;;KAAAA,Q;;AAuDT,SAASyB,GAAT,GAAe;AAAA;;AACZ,QAAM,CAACC,SAAD,EAAYC,OAAZ,IAAuB7B,QAAQ,CAAC,CAAC;AACjCM,IAAAA,KAAK,EAAE,CAD0B;AAEjCC,IAAAA,UAAU,EAAE,EAFqB;AAGjCE,IAAAA,SAAS,EAAE;AAHsB,GAAD,CAAD,CAArC,CADY,CAQZ;;AACA,QAAMqB,YAAY,GAAGC,IAAI,IAAI;AAC1BH,IAAAA,SAAS,CAACG,IAAI,CAACzB,KAAN,CAAT,GAAwByB,IAAxB;AACF,GAFD,CATY,CAaZ;;;AACA,QAAMC,SAAS,GAAG,MAAM;AACrB/B,IAAAA,aAAa,GAAGgC,UAAU,CAAChC,aAAD,CAAV,GAA4B,CAA5C;AACA,QAAIiC,WAAW,GAAG,CAAC,GAAGN,SAAJ,CAAlB;AACAM,IAAAA,WAAW,CAACjC,aAAD,CAAX,GAA6B;AAACK,MAAAA,KAAK,EAAEL,aAAR;AAAuBM,MAAAA,UAAU,EAAE,EAAnC;AAAuCE,MAAAA,SAAS,EAAE;AAAlD,KAA7B;AACAoB,IAAAA,OAAO,CAACK,WAAD,CAAP;AACF,GALD,CAdY,CAqBZ;;;AACA,QAAM7B,SAAS,GAAIC,KAAD,IAAW;AAC1B,QAAGsB,SAAS,CAACO,MAAV,GAAmB,CAAtB,EAAwB;AACrB,UAAID,WAAW,GAAG,CAAC,GAAGN,SAAJ,CAAlB;AACA,UAAIQ,aAAa,GAAGF,WAAW,CAACG,SAAZ,CAAsBC,CAAC,IAAIA,CAAC,CAAChC,KAAF,IAAWA,KAAtC,CAApB;;AACA,UAAG8B,aAAa,GAAG,CAAC,CAApB,EAAsB;AACnBF,QAAAA,WAAW,CAACK,MAAZ,CAAmBH,aAAnB,EAAkC,CAAlC;AACAP,QAAAA,OAAO,CAACK,WAAD,CAAP;AACF;AACH;AACH,GATD;;AAWD,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACG;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,EAAE,EAAC,WAA5B;AAAA,8BACE;AAAA,+BACG;AAAA,kCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFH,eAGG;AAAA;AAAA;AAAA;AAAA,kBAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAQG;AAAA,kBAEQN,SAAS,CAACY,GAAV,CAAc,CAACrC,GAAD,EAAMG,KAAN,KAAgB;AAC3B,cAAGH,GAAH,EACA,oBACG,QAAC,QAAD;AAAsB,YAAA,GAAG,EAAEA,GAA3B;AAAgC,YAAA,gBAAgB,EAAE2B,YAAlD;AAAgE,YAAA,SAAS,EAAEzB;AAA3E,aAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,kBADH;AAGF,SALD;AAFR;AAAA;AAAA;AAAA;AAAA,cARH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAoBG;AAAA,6BACG;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAE0B,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YApBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;IA3DQL,G;;MAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nvar tableRowIndex = 0;\nfunction TableRow ({row, handleDataChange, deleteRow}) {\n   const index = row.index\n   const [first_name, handleChangeFirstName] = useState(row.first_name);\n   const [last_name, handleChangeLastName] = useState(row.last_name);\n  \n   const updateValues = e => {\n      var inputName = e.target.name\n      var inputValue = e.target.value\n      if(inputName == 'first_name'){\n         handleChangeFirstName(inputValue)\n      }else if(inputName == 'last_name'){\n         handleChangeLastName(inputValue)\n      }\n\n      handleDataChange({\n         index: index,\n         first_name: first_name,\n         last_name: last_name\n      })\n   }\n\n   const removeRow = () => {\n      deleteRow(index)\n   }\n\n   return(\n      <tr>\n          <th scope=\"row\">1</th>\n      <td><div className=\"form-field col-lg-6\">\n      <input className=\"input-text js-input\"\n        type=\"text\"\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        value={input}\n      />\n      {renderAutocomplete()}\n\n      </div>    </td>\n      <td>\n        <div className=\"form-field col-lg-6 \">\n          <input name=\"ItemQuantity\" onChange={handleInputChange} value={values.ItemQuantity}   id=\"ItemQuantity\" className=\"input-text js-input\" type=\"Number\" required/>\n        </div>\n      </td>\n      <td>\n        <div className=\"form-field col-lg-6 \">\n            <input name=\"ItemPrice\" onChange={handleInputChange} value={values.ItemPrice}  id=\"Price\" className=\"input-text js-input\" type=\"Amount\"  />\n        </div>\n      </td>\n      <td>\n        {values.ItemPrice*values.ItemQuantity}{\" PKR\"}\n      </td>\n        </tr>\n   )\n}\n\nfunction Add() {\n   const [talbeRows, setRows] = useState([{\n         index: 0,\n         first_name: \"\",\n         last_name: \"\"\n      }\n   ]);\n\n   // Receive data from TableRow \n   const handleChange = data => {\n      talbeRows[data.index] = data\n   }\n\n   // Add New Table Row\n   const addNewRow = () => {\n      tableRowIndex = parseFloat(tableRowIndex) + 1\n      var updatedRows = [...talbeRows]\n      updatedRows[tableRowIndex] = {index: tableRowIndex, first_name: \"\", last_name: \"\"}\n      setRows(updatedRows)\n   }\n   \n   // Remove Table row if rows are count is more than 1\n   const deleteRow = (index) => {\n      if(talbeRows.length > 1){\n         var updatedRows = [...talbeRows]\n         var indexToRemove = updatedRows.findIndex(x => x.index == index);\n         if(indexToRemove > -1){\n            updatedRows.splice(indexToRemove, 1)\n            setRows(updatedRows);\n         }\n      }\n   }\n\n  return (\n    <div className=\"customers\">\n       <table className=\"table\" id=\"customers\">\n         <thead>\n            <tr>\n               <th>ID</th>\n               <th>Name</th>\n               <th></th>\n            </tr>\n          </thead>\n          <tbody>\n               {\n                  talbeRows.map((row, index) => {\n                     if(row)\n                     return(\n                        <TableRow key={index} row={row} handleDataChange={handleChange} deleteRow={deleteRow}></TableRow>\n                     )\n                  })\n               }\n          </tbody>\n       </table>\n       <div>\n          <button className=\"btn-add\" onClick={addNewRow}>+Add</button>\n       </div>\n    </div>\n  );\n}\n\nexport default Add;"]},"metadata":{},"sourceType":"module"}