{"ast":null,"code":"var _jsxFileName = \"/Users/maazasim/homeelectronics/src/Components/Add.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar tableRowIndex = 0;\n\nfunction TableRow(_ref) {\n  _s();\n\n  let {\n    row,\n    handleDataChange,\n    deleteRow\n  } = _ref;\n  const index = row.index;\n  const [first_name, handleChangeFirstName] = useState(row.first_name);\n  const [last_name, handleChangeLastName] = useState(row.last_name);\n\n  const updateValues = e => {\n    var inputName = e.target.name;\n    var inputValue = e.target.value;\n\n    if (inputName == 'first_name') {\n      handleChangeFirstName(inputValue);\n    } else if (inputName == 'last_name') {\n      handleChangeLastName(inputValue);\n    }\n\n    handleDataChange({\n      index: index,\n      first_name: first_name,\n      last_name: last_name\n    });\n  };\n\n  const removeRow = () => {\n    deleteRow(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"first_name\",\n        className: \"first_name\",\n        placeholder: \"First Name\",\n        value: first_name,\n        onChange: updateValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"last_name\",\n        className: \"last_name\",\n        placeholder: \"Last Name\",\n        value: last_name,\n        onChange: updateValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-remove\",\n        onClick: removeRow,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TableRow, \"svCjnJv4DjOboTEIPvqPpuPhjvE=\");\n\n_c = TableRow;\n\nfunction Add() {\n  _s2();\n\n  const [talbeRows, setRows] = useState([{\n    index: 0,\n    first_name: \"\",\n    last_name: \"\"\n  }]); // Receive data from TableRow \n\n  const handleChange = data => {\n    talbeRows[data.index] = data;\n  }; // Add New Table Row\n\n\n  const addNewRow = () => {\n    tableRowIndex = parseFloat(tableRowIndex) + 1;\n    var updatedRows = [...talbeRows];\n    updatedRows[tableRowIndex] = {\n      index: tableRowIndex,\n      first_name: \"\",\n      last_name: \"\"\n    };\n    setRows(updatedRows);\n  }; // Remove Table row if rows are count is more than 1\n\n\n  const deleteRow = index => {\n    if (talbeRows.length > 1) {\n      var updatedRows = [...talbeRows];\n      var indexToRemove = updatedRows.findIndex(x => x.index == index);\n\n      if (indexToRemove > -1) {\n        updatedRows.splice(indexToRemove, 1);\n        setRows(updatedRows);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customers\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      id: \"customers\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Unit Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"SubTotal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: talbeRows.map((row, index) => {\n          if (row) return /*#__PURE__*/_jsxDEV(TableRow, {\n            row: row,\n            handleDataChange: handleChange,\n            deleteRow: deleteRow,\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field col-lg-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input-text js-input\",\n                  type: \"text\",\n                  onChange: onChange,\n                  onKeyDown: onKeyDown,\n                  value: input\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 7\n                }, this), renderAutocomplete()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 11\n              }, this), \"    \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field col-lg-6 \",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"ItemQuantity\",\n                  onChange: handleInputChange,\n                  value: values.ItemQuantity,\n                  id: \"ItemQuantity\",\n                  className: \"input-text js-input\",\n                  type: \"Number\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-field col-lg-6 \",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"ItemPrice\",\n                  onChange: handleInputChange,\n                  value: values.ItemPrice,\n                  id: \"Price\",\n                  className: \"input-text js-input\",\n                  type: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [values.ItemPrice * values.ItemQuantity, \" PKR\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 7\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-add\",\n        onClick: addNewRow,\n        children: \"+Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Add, \"2DnCiQc89iHV0HyREp+objPYTjk=\");\n\n_c2 = Add;\nexport default Add;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableRow\");\n$RefreshReg$(_c2, \"Add\");","map":{"version":3,"sources":["/Users/maazasim/homeelectronics/src/Components/Add.js"],"names":["React","useState","tableRowIndex","TableRow","row","handleDataChange","deleteRow","index","first_name","handleChangeFirstName","last_name","handleChangeLastName","updateValues","e","inputName","target","name","inputValue","value","removeRow","Add","talbeRows","setRows","handleChange","data","addNewRow","parseFloat","updatedRows","length","indexToRemove","findIndex","x","splice","map","onChange","onKeyDown","input","renderAutocomplete","handleInputChange","values","ItemQuantity","ItemPrice"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nvar tableRowIndex = 0;\nfunction TableRow ({row, handleDataChange, deleteRow}) {\n   const index = row.index\n   const [first_name, handleChangeFirstName] = useState(row.first_name);\n   const [last_name, handleChangeLastName] = useState(row.last_name);\n  \n   const updateValues = e => {\n      var inputName = e.target.name\n      var inputValue = e.target.value\n      if(inputName == 'first_name'){\n         handleChangeFirstName(inputValue)\n      }else if(inputName == 'last_name'){\n         handleChangeLastName(inputValue)\n      }\n\n      handleDataChange({\n         index: index,\n         first_name: first_name,\n         last_name: last_name\n      })\n   }\n\n   const removeRow = () => {\n      deleteRow(index)\n   }\n\n   return(\n      <tr>\n         <td>{index + 1}</td>\n         <td>\n            <input type=\"text\" name=\"first_name\" className=\"first_name\" placeholder=\"First Name\" value={first_name} onChange={updateValues}></input>\n            <input type=\"text\" name=\"last_name\"  className=\"last_name\" placeholder=\"Last Name\" value={last_name} onChange={updateValues}></input>\n         </td>\n         <td><button type=\"button\" className=\"btn btn-remove\" onClick={removeRow}>&times;</button></td>\n      </tr>\n   )\n}\n\nfunction Add() {\n   const [talbeRows, setRows] = useState([{\n         index: 0,\n         first_name: \"\",\n         last_name: \"\"\n      }\n   ]);\n\n   // Receive data from TableRow \n   const handleChange = data => {\n      talbeRows[data.index] = data\n   }\n\n   // Add New Table Row\n   const addNewRow = () => {\n      tableRowIndex = parseFloat(tableRowIndex) + 1\n      var updatedRows = [...talbeRows]\n      updatedRows[tableRowIndex] = {index: tableRowIndex, first_name: \"\", last_name: \"\"}\n      setRows(updatedRows)\n   }\n   \n   // Remove Table row if rows are count is more than 1\n   const deleteRow = (index) => {\n      if(talbeRows.length > 1){\n         var updatedRows = [...talbeRows]\n         var indexToRemove = updatedRows.findIndex(x => x.index == index);\n         if(indexToRemove > -1){\n            updatedRows.splice(indexToRemove, 1)\n            setRows(updatedRows);\n         }\n      }\n   }\n\n  return (\n    <div className=\"customers\">\n       <table className=\"table\" id=\"customers\">\n         <thead>\n            <tr>\n            <th scope=\"col\">#</th>\n      <th scope=\"col\">Product</th>\n      <th scope=\"col\">Quantity</th>\n      <th scope=\"col\">Unit Price</th>\n      <th scope=\"col\">SubTotal</th>\n            </tr>\n          </thead>\n          <tbody>\n               {\n                  talbeRows.map((row, index) => {\n                     if(row)\n                     return(\n                        <TableRow key={index} row={row} handleDataChange={handleChange} deleteRow={deleteRow}>\n                             <th scope=\"row\">1</th>\n      <td><div className=\"form-field col-lg-6\">\n      <input className=\"input-text js-input\"\n        type=\"text\"\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        value={input}\n      />\n      {renderAutocomplete()}\n\n      </div>    </td>\n      <td>\n        <div className=\"form-field col-lg-6 \">\n          <input name=\"ItemQuantity\" onChange={handleInputChange} value={values.ItemQuantity}   id=\"ItemQuantity\" className=\"input-text js-input\" type=\"Number\" required/>\n        </div>\n      </td>\n      <td>\n        <div className=\"form-field col-lg-6 \">\n            <input name=\"ItemPrice\" onChange={handleInputChange} value={values.ItemPrice}  id=\"Price\" className=\"input-text js-input\" type=\"Amount\"  />\n        </div>\n      </td>\n      <td>\n        {values.ItemPrice*values.ItemQuantity}{\" PKR\"}\n      </td>\n                        </TableRow>\n                     )\n                  })\n               }\n          </tbody>\n       </table>\n       <div>\n          <button className=\"btn-add\" onClick={addNewRow}>+Add</button>\n       </div>\n    </div>\n  );\n}\n\nexport default Add;"]},"metadata":{},"sourceType":"module"}