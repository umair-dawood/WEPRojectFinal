{"ast":null,"code":"import api from './api';\nconst Tables = {\n  BillChild_POS: \"BillChild_POS/\",\n  BillMaster_POS: \"BillMaster_POS/\",\n  EmployeeRecord: \"EmployeeRecord/\",\n  ItemDetails: \"ItemDetails/\",\n  StockDetails: \"StockDetails/\",\n  StockTransfer: \"StockTransfer\",\n  UserLogin: \"UserLogin/\",\n  UserRights: \"UserRights/\",\n  UserTypeRecord: \"UserTypeRecord/\",\n  WareHouse: \"WareHouse/\"\n};\nconst baseurl = \"http://localhost:5000/api/\";\nlet TableString = \"\";\nexport const ACTION_TYPES = {\n  CREATE: 'CREATE',\n  UPDATE: 'UPDATE',\n  DELETE: 'DELETE',\n  FETCH_ALL: 'FETCH_ALL'\n};\nexport const fetchall = Table => dispatch => {\n  api.pos(baseurl, Table).fetchAll().then(response => {\n    console.log(response);\n    dispatch({\n      type: ACTION_TYPES.FETCH_ALL,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const create = function (data, onSuccess) {\n  let Table = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : TableString;\n  return dispatch => {\n    api.pos(baseurl, Table).create(data).then(response => {\n      dispatch({\n        type: ACTION_TYPES.CREATE,\n        payload: response.data\n      });\n      onSuccess();\n    }).catch(err => console.log(err));\n  };\n};\nexport const update = (data, id, onSuccess, Table) => dispatch => {\n  api.pos(baseurl, Table).update(id, data, Table).then(response => {\n    dispatch({\n      type: ACTION_TYPES.UPDATE,\n      payload: {\n        id,\n        ...data\n      }\n    });\n    onSuccess();\n  }).catch(err => console.log(err));\n};\nexport const Delete = (id, onSuccess, Table) => dispatch => {\n  api.pos(baseurl, Table).delete(id).then(response => {\n    dispatch({\n      type: ACTION_TYPES.DELETE,\n      payload: id\n    });\n    onSuccess();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/maazasim/homeelectronics/src/actions/pos.js"],"names":["api","Tables","BillChild_POS","BillMaster_POS","EmployeeRecord","ItemDetails","StockDetails","StockTransfer","UserLogin","UserRights","UserTypeRecord","WareHouse","baseurl","TableString","ACTION_TYPES","CREATE","UPDATE","DELETE","FETCH_ALL","fetchall","Table","dispatch","pos","fetchAll","then","response","console","log","type","payload","data","catch","err","create","onSuccess","update","id","Delete","delete"],"mappings":"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","sourcesContent":["import api from './api';\n\nconst Tables={\n    BillChild_POS:\"BillChild_POS/\",\n    BillMaster_POS:\"BillMaster_POS/\",\n    EmployeeRecord:\"EmployeeRecord/\",\n    ItemDetails:\"ItemDetails/\",\n    StockDetails:\"StockDetails/\",\n    StockTransfer:\"StockTransfer\",\n    UserLogin:\"UserLogin/\",\n    UserRights:\"UserRights/\",\n    UserTypeRecord:\"UserTypeRecord/\",\n    WareHouse:\"WareHouse/\"\n    }\n    \n    const baseurl = \"http://localhost:5000/api/\";\n\nlet TableString=\"\";\n\nexport const ACTION_TYPES = {\n    CREATE:'CREATE',\n    UPDATE:'UPDATE',\n    DELETE :'DELETE',\n    FETCH_ALL:'FETCH_ALL'\n}\n\nexport const fetchall = (Table) => dispatch => {\n    api.pos(baseurl,Table).fetchAll()\n    .then(response => {\n            console.log(response)\n            dispatch({\n                type:ACTION_TYPES.FETCH_ALL,\n                payload:response.data\n            })\n            \n        }\n    )\n    .catch(err=>console.log(err))\n   \n}\nexport const create = (data,onSuccess,Table=TableString) => dispatch => {\n    api.pos(baseurl,Table).create(data)\n    .then(response=>{\n        dispatch({\n            type:ACTION_TYPES.CREATE,\n            payload:response.data\n        })\n        onSuccess()\n    })\n    .catch(err=>console.log(err))\n}\n\nexport const update = (data,id,onSuccess,Table) => dispatch => {\n    api.pos(baseurl,Table).update(id,data,Table)\n    .then(response=>{\n        dispatch({\n            type:ACTION_TYPES.UPDATE,\n            payload:{id,...data}\n        })\n        onSuccess()\n    })\n    .catch(err=>console.log(err))\n}\n\nexport const Delete = (id,onSuccess,Table) => dispatch => {\n    api.pos(baseurl,Table).delete(id)\n    .then(response=>{\n        dispatch({\n            type:ACTION_TYPES.DELETE,\n            payload:id \n        })\n        onSuccess()\n    })\n    .catch(err=>console.log(err))\n}"]},"metadata":{},"sourceType":"module"}