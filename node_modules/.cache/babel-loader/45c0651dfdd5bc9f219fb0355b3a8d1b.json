{"ast":null,"code":"var _jsxFileName = \"/Users/maazasim/homeelectronics/src/Components/Add.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as actions from '../actions/pos';\nimport * as Sales_preview from './Sales_preview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar tableRowIndex = 0;\n\nfunction TableRow(_ref) {\n  _s();\n\n  let {\n    row,\n    handleDataChange,\n    deleteRow\n  } = _ref;\n  const index = row.index;\n  const [first_name, handleChangeFirstName] = useState(row.first_name);\n  const [last_name, handleChangeLastName] = useState(row.last_name);\n\n  const updateValues = e => {\n    var inputName = e.target.name;\n    var inputValue = e.target.value;\n\n    if (inputName == 'first_name') {\n      handleChangeFirstName(inputValue);\n    } else if (inputName == 'last_name') {\n      handleChangeLastName(inputValue);\n    }\n\n    handleDataChange({\n      index: index,\n      first_name: first_name,\n      last_name: last_name\n    });\n  };\n\n  const removeRow = () => {\n    deleteRow(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      scope: \"row\",\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-field col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-text js-input\",\n          type: \"text\",\n          onChange: onChange,\n          onKeyDown: onKeyDown,\n          value: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this), renderAutocomplete()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), \"    \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-field col-lg-6 \",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"ItemQuantity\",\n          onChange: handleInputChange,\n          value: values.ItemQuantity,\n          id: \"ItemQuantity\",\n          className: \"input-text js-input\",\n          type: \"Number\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-field col-lg-6 \",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"ItemPrice\",\n          onChange: handleInputChange,\n          value: values.ItemPrice,\n          id: \"Price\",\n          className: \"input-text js-input\",\n          type: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [values.ItemPrice * values.ItemQuantity, \" PKR\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n\n_s(TableRow, \"svCjnJv4DjOboTEIPvqPpuPhjvE=\");\n\n_c = TableRow;\n\nfunction Add(props) {\n  _s2();\n\n  var price,\n      quantity = 0;\n  const [active, setActive] = useState(0);\n  const [filtered, setFiltered] = useState([]);\n  const [isShow, setIsShow] = useState(false);\n  const [input, setInput] = useState(\"\");\n\n  const onChange = e => {\n    const suggestions = [\"123\", \"456\"];\n    const input = e.currentTarget.value;\n    const newFilteredSuggestions = suggestions.filter(suggestion => suggestion.toLowerCase().indexOf(input.toLowerCase()) > -1);\n    setActive(0);\n    setFiltered(newFilteredSuggestions);\n    setIsShow(true);\n    setInput(e.currentTarget.value);\n  };\n\n  const onClick = e => {\n    setActive(0);\n    setFiltered([]);\n    setIsShow(false);\n    setInput(e.currentTarget.innerText);\n  };\n\n  const onKeyDown = e => {\n    if (e.keyCode === 13) {\n      setActive(0);\n      setIsShow(false);\n      setInput(filtered[active]);\n    } else if (e.keyCode === 38) {\n      return active === 0 ? null : setActive(active - 1);\n    } else if (e.keyCode === 40) {\n      return active - 1 === filtered.length ? null : setActive(active + 1);\n    }\n  };\n\n  const renderAutocomplete = () => {\n    if (isShow && input) {\n      if (filtered.length) {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"autocomplete\",\n          children: filtered.map((suggestion, index) => {\n            let className;\n\n            if (index === active) {\n              className = \"active\";\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: className,\n              onClick: onClick,\n              children: suggestion\n            }, suggestion, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 18\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 12\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-autocomplete\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Not found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 12\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const intialvalues = {\n    ItemBrand: 'Haier',\n    ItemType: 'AC',\n    ItemSKU: '',\n    ItemQuantity: 0,\n    ItemPrice: 0\n  };\n  const [values, setValues] = useState(intialvalues);\n\n  const handleSubmit = e => {\n    actions.TableString.StringOfTable = \"Bill_Child_Temp\";\n    setValues(values.ItemSKU = input);\n    console.log(input);\n    e.preventDefault();\n    console.log(values);\n    props.createPos(values, () => {});\n    window.alert(\"Product Added\");\n    Sales_preview.reRender.reRender += 1;\n  };\n\n  function handleInputChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  }\n\n  const [talbeRows, setRows] = useState([{\n    index: 0,\n    first_name: \"\",\n    last_name: \"\"\n  }]); // Receive data from TableRow \n\n  const handleChange = data => {\n    talbeRows[data.index] = data;\n  }; // Add New Table Row\n\n\n  const addNewRow = () => {\n    tableRowIndex = parseFloat(tableRowIndex) + 1;\n    var updatedRows = [...talbeRows];\n    updatedRows[tableRowIndex] = {\n      index: tableRowIndex,\n      first_name: \"\",\n      last_name: \"\"\n    };\n    setRows(updatedRows);\n  }; // Remove Table row if rows are count is more than 1\n\n\n  const deleteRow = index => {\n    if (talbeRows.length > 1) {\n      var updatedRows = [...talbeRows];\n      var indexToRemove = updatedRows.findIndex(x => x.index == index);\n\n      if (indexToRemove > -1) {\n        updatedRows.splice(indexToRemove, 1);\n        setRows(updatedRows);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"customers\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      id: \"customers\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Unit Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"SubTotal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: talbeRows.map((row, index) => {\n          if (row) return /*#__PURE__*/_jsxDEV(TableRow, {\n            row: row,\n            handleDataChange: handleChange,\n            deleteRow: deleteRow\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-add\",\n        onClick: addNewRow,\n        children: \"+Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Add, \"Uc+62V8rqV/styHwbSyijgoy0NI=\");\n\n_c2 = Add;\nexport default Add;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableRow\");\n$RefreshReg$(_c2, \"Add\");","map":{"version":3,"sources":["/Users/maazasim/homeelectronics/src/Components/Add.js"],"names":["React","useState","actions","Sales_preview","tableRowIndex","TableRow","row","handleDataChange","deleteRow","index","first_name","handleChangeFirstName","last_name","handleChangeLastName","updateValues","e","inputName","target","name","inputValue","value","removeRow","onChange","onKeyDown","input","renderAutocomplete","handleInputChange","values","ItemQuantity","ItemPrice","Add","props","price","quantity","active","setActive","filtered","setFiltered","isShow","setIsShow","setInput","suggestions","currentTarget","newFilteredSuggestions","filter","suggestion","toLowerCase","indexOf","onClick","innerText","keyCode","length","map","className","intialvalues","ItemBrand","ItemType","ItemSKU","setValues","handleSubmit","TableString","StringOfTable","console","log","preventDefault","createPos","window","alert","reRender","talbeRows","setRows","handleChange","data","addNewRow","parseFloat","updatedRows","indexToRemove","findIndex","x","splice"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport * as actions from '../actions/pos';\nimport * as Sales_preview from './Sales_preview';\n\n\n\nvar tableRowIndex = 0;\nfunction TableRow ({row, handleDataChange, deleteRow}) {\n   const index = row.index\n   const [first_name, handleChangeFirstName] = useState(row.first_name);\n   const [last_name, handleChangeLastName] = useState(row.last_name);\n  \n   const updateValues = e => {\n      var inputName = e.target.name\n      var inputValue = e.target.value\n      if(inputName == 'first_name'){\n         handleChangeFirstName(inputValue)\n      }else if(inputName == 'last_name'){\n         handleChangeLastName(inputValue)\n      }\n\n      handleDataChange({\n         index: index,\n         first_name: first_name,\n         last_name: last_name\n      })\n   }\n\n   const removeRow = () => {\n      deleteRow(index)\n   }\n\n   return(\n      <tr>\n         <th scope=\"row\">1</th>\n      <td><div className=\"form-field col-lg-6\">\n      <input className=\"input-text js-input\"\n        type=\"text\"\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        value={input}\n      />\n      {renderAutocomplete()}\n\n      </div>    </td>\n      <td>\n        <div className=\"form-field col-lg-6 \">\n          <input name=\"ItemQuantity\" onChange={handleInputChange} value={values.ItemQuantity}   id=\"ItemQuantity\" className=\"input-text js-input\" type=\"Number\" required/>\n        </div>\n      </td>\n      <td>\n        <div className=\"form-field col-lg-6 \">\n            <input name=\"ItemPrice\" onChange={handleInputChange} value={values.ItemPrice}  id=\"Price\" className=\"input-text js-input\" type=\"Amount\"  />\n        </div>\n      </td>\n      <td>\n        {values.ItemPrice*values.ItemQuantity}{\" PKR\"}\n      </td>\n            \n      </tr>\n   )\n}\n\nfunction Add(props) {\n    var price,quantity=0;\n   const [active, setActive] = useState(0);\n   const [filtered, setFiltered] = useState([]);\n   const [isShow, setIsShow] = useState(false);\n   const [input, setInput] = useState(\"\");\n   \n   const onChange = e => {\n     const  suggestions  = [\"123\",\"456\"];\n     const input = e.currentTarget.value;\n     const newFilteredSuggestions = suggestions.filter(\n       suggestion =>\n         suggestion.toLowerCase().indexOf(input.toLowerCase()) > -1\n     );\n     setActive(0);\n     setFiltered(newFilteredSuggestions);\n     setIsShow(true);\n     setInput(e.currentTarget.value)\n   };\n const onClick = e => {\n     setActive(0);\n     setFiltered([]);\n     setIsShow(false);\n     setInput(e.currentTarget.innerText)\n   };\n const onKeyDown = e => {\n     if (e.keyCode === 13) { \n       setActive(0);\n       setIsShow(false);\n       setInput(filtered[active])\n     }\n     else if (e.keyCode === 38) { \n       return (active === 0) ? null : setActive(active - 1);\n     }\n     else if (e.keyCode === 40) { \n       return (active - 1 === filtered.length) ? null : setActive(active + 1);\n     }\n   };\n const renderAutocomplete = () => {\n     if (isShow && input) {\n       if (filtered.length) {\n         return (\n           <ul className=\"autocomplete\">\n             {filtered.map((suggestion, index) => {\n               let className;\n               if (index === active) {\n                 className = \"active\";\n               }\n               return (\n                 <li className={className} key={suggestion} onClick={onClick}>\n                   {suggestion}\n                 </li>\n               );\n             })}\n           </ul>\n         );\n       } else {\n         return (\n           <div className=\"no-autocomplete\">\n             <em>Not found</em>\n           </div>\n         );\n       }\n     }\n     return <></>;\n   }\n   \n   const intialvalues={\n\n      ItemBrand:'Haier',\n      ItemType:'AC',\n      ItemSKU:'',\n      ItemQuantity:0,\n      ItemPrice:0,\n   }\n   \n   const [values,setValues] = useState(intialvalues);\n\n   const handleSubmit =e=>{\n    actions.TableString.StringOfTable=\"Bill_Child_Temp\";\n\n      setValues(values.ItemSKU=input)\n      console.log(input)\n      e.preventDefault();\n      console.log(values);\n      props.createPos(values,()=>{})\n      window.alert(\"Product Added\")\n      Sales_preview.reRender.reRender+=1\n      \n   }\n   function handleInputChange(e){\n     \n     const {name,value}=e.target\n     setValues({\n       ...values,\n       [name]: value\n\n      })\n\n\n    }\n\n\n   const [talbeRows, setRows] = useState([{\n         index: 0,\n         first_name: \"\",\n         last_name: \"\"\n      }\n   ]);\n\n   // Receive data from TableRow \n   const handleChange = data => {\n      talbeRows[data.index] = data\n   }\n\n   // Add New Table Row\n   const addNewRow = () => {\n      tableRowIndex = parseFloat(tableRowIndex) + 1\n      var updatedRows = [...talbeRows]\n      updatedRows[tableRowIndex] = {index: tableRowIndex, first_name: \"\", last_name: \"\"}\n      setRows(updatedRows)\n   }\n   \n   // Remove Table row if rows are count is more than 1\n   const deleteRow = (index) => {\n      if(talbeRows.length > 1){\n         var updatedRows = [...talbeRows]\n         var indexToRemove = updatedRows.findIndex(x => x.index == index);\n         if(indexToRemove > -1){\n            updatedRows.splice(indexToRemove, 1)\n            setRows(updatedRows);\n         }\n      }\n   }\n\n  return (\n    <div className=\"customers\">\n       <table className=\"table\" id=\"customers\">\n         <thead>\n            <tr>\n            <th scope=\"col\">#</th>\n      <th scope=\"col\">Product</th>\n      <th scope=\"col\">Quantity</th>\n      <th scope=\"col\">Unit Price</th>\n      <th scope=\"col\">SubTotal</th>\n            </tr>\n          </thead>\n          <tbody>\n               {\n                  talbeRows.map((row, index) => {\n                     if(row)\n                     return(\n                        <TableRow key={index} row={row} handleDataChange={handleChange} deleteRow={deleteRow}>\n\n                        </TableRow>\n                     )\n                  })\n               }\n          </tbody>\n       </table>\n       <div>\n          <button className=\"btn-add\" onClick={addNewRow}>+Add</button>\n       </div>\n    </div>\n  );\n}\n\nexport default Add;"]},"metadata":{},"sourceType":"module"}