{"ast":null,"code":"import { ACTION_TYPES } from \"../actions/pos\";\nconst initialState = {\n  list: []\n};\nexport const pos = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ACTION_TYPES.FETCH_ALL:\n      return { ...state,\n        list: [...action.payload]\n      };\n\n    case ACTION_TYPES.CREATE:\n      return { ...state,\n        list: [...state.list, action.payload]\n      };\n\n    case ACTION_TYPES.UPDATE:\n      return { ...state,\n        list: state.list.map(x => x.id == action.payload.id ? action.payload : x)\n      };\n\n    case ACTION_TYPES.DELETE:\n      return { ...state,\n        list: state.list.filter(x => x.id != action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/maazasim/homeelectronics/src/reducers/pos.js"],"names":["ACTION_TYPES","initialState","list","pos","state","action","type","FETCH_ALL","payload","CREATE","UPDATE","map","x","id","DELETE","filter"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEI,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC;AADY,CAArB;AAIA,OAAO,MAAMC,GAAG,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACY,SAAKN,YAAY,CAACO,SAAlB;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,IAAI,EAAC,CAAC,GAAGG,MAAM,CAACG,OAAX;AAFH,OAAN;;AAIJ,SAAKR,YAAY,CAACS,MAAlB;AACI,aAAO,EACP,GAAGL,KADI;AAEPF,QAAAA,IAAI,EAAC,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAeG,MAAM,CAACG,OAAtB;AAFE,OAAP;;AAKJ,SAAKR,YAAY,CAACU,MAAlB;AACI,aAAO,EACP,GAAGN,KADI;AAEPF,QAAAA,IAAI,EAACE,KAAK,CAACF,IAAN,CAAWS,GAAX,CAAeC,CAAC,IAAEA,CAAC,CAACC,EAAF,IAAMR,MAAM,CAACG,OAAP,CAAeK,EAArB,GAA0BR,MAAM,CAACG,OAAjC,GAA2CI,CAA7D;AAFE,OAAP;;AAKJ,SAAKZ,YAAY,CAACc,MAAlB;AACI,aAAO,EACP,GAAGV,KADI;AAEPF,QAAAA,IAAI,EAACE,KAAK,CAACF,IAAN,CAAWa,MAAX,CAAkBH,CAAC,IAAEA,CAAC,CAACC,EAAF,IAAMR,MAAM,CAACG,OAAlC;AAFE,OAAP;;AAOZ;AACI,aAAOJ,KAAP;AA3BR;AA6BH,CA9BM","sourcesContent":["import { ACTION_TYPES } from \"../actions/pos\";\n\n    const initialState = {\n        list:[]\n    }\n\n    export const pos = (state = initialState, action) => {\n        switch (action.type) {\n                    case ACTION_TYPES.FETCH_ALL:\n                        return{\n                            ...state,\n                            list:[...action.payload]\n                        }\n                    case ACTION_TYPES.CREATE:\n                        return {\n                        ...state,\n                        list:[...state.list,action.payload]\n\n                        }\n                    case ACTION_TYPES.UPDATE:\n                        return {\n                        ...state,\n                        list:state.list.map(x=>x.id==action.payload.id ? action.payload : x)\n        \n                        }\n                    case ACTION_TYPES.DELETE:\n                        return {\n                        ...state, \n                        list:state.list.filter(x=>x.id!=action.payload)\n        \n                        }\n            \n        \n            default:\n                return state;\n        }\n    }"]},"metadata":{},"sourceType":"module"}