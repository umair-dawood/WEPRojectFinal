{"ast":null,"code":"import api from './api';\nconst baseurl = \"http://0.0.0.0:5000/api/\";\nexport var TableString = {\n  StringOfTable: \"\"\n};\nexport const ACTION_TYPES = {\n  CREATE: 'CREATE',\n  UPDATE: 'UPDATE',\n  DELETE: 'DELETE',\n  FETCH_ALL: 'FETCH_ALL'\n};\nexport const fetchall = function () {\n  let Table = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : TableString.StringOfTable;\n  return dispatch => {\n    api.pos(baseurl, Table).fetchAll().then(response => {\n      console.log(response);\n      dispatch({\n        type: ACTION_TYPES.FETCH_ALL,\n        payload: response.data\n      });\n    }).catch(err => console.log(err));\n  };\n};\nexport const create = function (data, onSuccess) {\n  let Table = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : TableString.StringOfTable;\n  return dispatch => {\n    api.pos(baseurl, Table).create(data).then(response => {\n      dispatch({\n        type: ACTION_TYPES.CREATE,\n        payload: response.data\n      });\n      onSuccess();\n    }).catch(function (error) {\n      if (error.response === 416) {\n        // Request made and server responded\n        console.log(error.response);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n    });\n  };\n};\nexport const update = (data, id, onSuccess, Table) => dispatch => {\n  api.pos(baseurl, Table).update(id, data, Table).then(response => {\n    dispatch({\n      type: ACTION_TYPES.UPDATE,\n      payload: {\n        id,\n        ...data\n      }\n    });\n    onSuccess();\n  }).catch(err => console.log(err));\n};\nexport const Delete = (id, onSuccess, Table) => dispatch => {\n  api.pos(baseurl, Table).delete(id).then(response => {\n    dispatch({\n      type: ACTION_TYPES.DELETE,\n      payload: id\n    });\n    onSuccess();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/maazasim/homeelectronics/src/actions/pos.js"],"names":["api","baseurl","TableString","StringOfTable","ACTION_TYPES","CREATE","UPDATE","DELETE","FETCH_ALL","fetchall","Table","dispatch","pos","fetchAll","then","response","console","log","type","payload","data","catch","err","create","onSuccess","error","request","message","update","id","Delete","delete"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAII,MAAMC,OAAO,GAAG,0BAAhB;AAEJ,OAAO,IAAIC,WAAW,GAAC;AAACC,EAAAA,aAAa,EAAC;AAAf,CAAhB;AAEP,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAC,QADiB;AAExBC,EAAAA,MAAM,EAAC,QAFiB;AAGxBC,EAAAA,MAAM,EAAE,QAHgB;AAIxBC,EAAAA,SAAS,EAAC;AAJc,CAArB;AAOP,OAAO,MAAMC,QAAQ,GAAG;AAAA,MAACC,KAAD,uEAAOR,WAAW,CAACC,aAAnB;AAAA,SAAqCQ,QAAQ,IAAI;AACrEX,IAAAA,GAAG,CAACY,GAAJ,CAAQX,OAAR,EAAgBS,KAAhB,EAAuBG,QAAvB,GACCC,IADD,CACMC,QAAQ,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAJ,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAACd,YAAY,CAACI,SADb;AAELW,QAAAA,OAAO,EAACJ,QAAQ,CAACK;AAFZ,OAAD,CAAR;AAKH,KARL,EAUCC,KAVD,CAUOC,GAAG,IAAEN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAVZ;AAYH,GAbuB;AAAA,CAAjB;AAcP,OAAO,MAAMC,MAAM,GAAG,UAACH,IAAD,EAAMI,SAAN;AAAA,MAAgBd,KAAhB,uEAAsBR,WAAW,CAACC,aAAlC;AAAA,SAAoDQ,QAAQ,IAAI;AAElFX,IAAAA,GAAG,CAACY,GAAJ,CAAQX,OAAR,EAAgBS,KAAhB,EAAuBa,MAAvB,CAA8BH,IAA9B,EACCN,IADD,CACMC,QAAQ,IAAE;AACZJ,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAACd,YAAY,CAACC,MADb;AAELc,QAAAA,OAAO,EAACJ,QAAQ,CAACK;AAFZ,OAAD,CAAR;AAIAI,MAAAA,SAAS;AACZ,KAPD,EAQCH,KARD,CAQO,UAAUI,KAAV,EAAiB;AACpB,UAAIA,KAAK,CAACV,QAAN,KAAiB,GAArB,EAA0B;AACxB;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACV,QAAlB;AACA,OAHD,MAGO,IAAIU,KAAK,CAACC,OAAV,EAAmB;AACxB;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACC,OAAlB;AACD,OAHM,MAGA;AACL;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAAK,CAACE,OAA3B;AACD;AAEF,KApBH;AAqBH,GAvBqB;AAAA,CAAf;AAyBP,OAAO,MAAMC,MAAM,GAAG,CAACR,IAAD,EAAMS,EAAN,EAASL,SAAT,EAAmBd,KAAnB,KAA6BC,QAAQ,IAAI;AAC3DX,EAAAA,GAAG,CAACY,GAAJ,CAAQX,OAAR,EAAgBS,KAAhB,EAAuBkB,MAAvB,CAA8BC,EAA9B,EAAiCT,IAAjC,EAAsCV,KAAtC,EACCI,IADD,CACMC,QAAQ,IAAE;AACZJ,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAACd,YAAY,CAACE,MADb;AAELa,MAAAA,OAAO,EAAC;AAACU,QAAAA,EAAD;AAAI,WAAGT;AAAP;AAFH,KAAD,CAAR;AAIAI,IAAAA,SAAS;AACZ,GAPD,EAQCH,KARD,CAQOC,GAAG,IAAEN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CARZ;AASH,CAVM;AAYP,OAAO,MAAMQ,MAAM,GAAG,CAACD,EAAD,EAAIL,SAAJ,EAAcd,KAAd,KAAwBC,QAAQ,IAAI;AACtDX,EAAAA,GAAG,CAACY,GAAJ,CAAQX,OAAR,EAAgBS,KAAhB,EAAuBqB,MAAvB,CAA8BF,EAA9B,EACCf,IADD,CACMC,QAAQ,IAAE;AACZJ,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAACd,YAAY,CAACG,MADb;AAELY,MAAAA,OAAO,EAACU;AAFH,KAAD,CAAR;AAIAL,IAAAA,SAAS;AACZ,GAPD,EAQCH,KARD,CAQOC,GAAG,IAAEN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CARZ;AASH,CAVM","sourcesContent":["import api from './api';\n\n\n    \n    const baseurl = \"http://0.0.0.0:5000/api/\";\n\nexport var TableString={StringOfTable:\"\"};\n\nexport const ACTION_TYPES = {\n    CREATE:'CREATE',\n    UPDATE:'UPDATE',\n    DELETE :'DELETE',\n    FETCH_ALL:'FETCH_ALL'\n}\n\nexport const fetchall = (Table=TableString.StringOfTable) => dispatch => {\n    api.pos(baseurl,Table).fetchAll()\n    .then(response => {\n            console.log(response)\n            dispatch({\n                type:ACTION_TYPES.FETCH_ALL,\n                payload:response.data\n            })\n            \n        }\n    )\n    .catch(err=>console.log(err))\n   \n}\nexport const create = (data,onSuccess,Table=TableString.StringOfTable) => dispatch => {\n    \n    api.pos(baseurl,Table).create(data)\n    .then(response=>{\n        dispatch({\n            type:ACTION_TYPES.CREATE,\n            payload:response.data\n        })\n        onSuccess()\n    })\n    .catch(function (error) {\n        if (error.response===416) {\n          // Request made and server responded\n         console.log(error.response)\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', error.message);\n        }\n    \n      });\n}\n\nexport const update = (data,id,onSuccess,Table) => dispatch => {\n    api.pos(baseurl,Table).update(id,data,Table)\n    .then(response=>{\n        dispatch({\n            type:ACTION_TYPES.UPDATE,\n            payload:{id,...data}\n        })\n        onSuccess()\n    })\n    .catch(err=>console.log(err))\n}\n\nexport const Delete = (id,onSuccess,Table) => dispatch => {\n    api.pos(baseurl,Table).delete(id)\n    .then(response=>{\n        dispatch({\n            type:ACTION_TYPES.DELETE,\n            payload:id \n        })\n        onSuccess()\n    })\n    .catch(err=>console.log(err))\n}"]},"metadata":{},"sourceType":"module"}